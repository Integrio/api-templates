openapi: 3.0.0
info:
  title: iD Cloud APIs
  description: iD Cloud is an RFID integration platform for retail.
  contact:
    url: https://developer.nedapretail.com/
    email: support-idcloud@nedap.com
  version: '20240604'
servers:
  - url: https://api.nedapretail.com
    description: EU production
  - url: https://api.nedapretail.us
    description: US production
tags:
  - name: Approved difference list API
  - name: Article API
  - name: Difference list API
  - name: Display compliance API
  - name: EPCIS API
  - name: ERP stock API
  - name: KPI API
  - name: Organization API
  - name: Organization API v2
  - name: RFID count API
  - name: RFID stock API
  - name: Realtime Stock Mutation API
  - name: Refill API
  - name: Search list API
  - name: Shipment API v2
  - name: Transaction API
  - name: Webhook API
paths:
  /approved_difference_list/v1/list:
    get:
      tags:
        - Approved difference list API
      summary: List summaries
      description: Retrieves a list of approved difference list summaries for a given store.
      operationId: listApprovedDifferenceListSummaries
      parameters:
        - name: location
          in: query
          description: The location identifier of the store to retrieve the approved difference lists for.
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            minLength: 1
            type: string
          example: http://nedapretail.com/loc/store-1
        - name: from_rfid_time
          in: query
          description: Approved difference lists with RFID count time after this value will be returned.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: until_rfid_time
          in: query
          description: Approved difference lists with RFID count time before this value will be returned.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApprovedDifferenceListSummary'
      security:
        - bearerAuth: []
  /approved_difference_list/v1/retrieve:
    get:
      tags:
        - Approved difference list API
      summary: Retrieve
      description: Retrieves an approved difference list, using the approved difference list identifier.
      operationId: retrieveApprovedDifferenceList
      parameters:
        - name: id
          in: query
          description: Identifier of the approved difference list
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: uuid
          example: 96fb929a-80a7-4ddf-ac42-f153838383bb
        - name: include_articles
          in: query
          description: Whether to include article details like name, size, etc. in the response.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
        - name: accept
          in: header
          description: Content type to return.
          required: false
          style: simple
          explode: false
          schema:
            type: string
            default: application/json
            enum:
              - application/json
              - application/csv
              - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovedDifferenceListResponse'
            application/csv:
              schema:
                $ref: '#/components/schemas/ApprovedDifferenceListResponse'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/ApprovedDifferenceListResponse'
      security:
        - bearerAuth: []
  /approved_difference_list/v1/retrieve_summary:
    get:
      tags:
        - Approved difference list API
      summary: Retrieve summary
      description: Returns the summary of an approved difference list for a certain location and RFID count time.
      operationId: retrieveApprovedDifferenceListSummary
      parameters:
        - name: location
          in: query
          description: The location identifier of the store to retrieve the approved difference list summary for.
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            minLength: 1
            type: string
          example: http://nedapretail.com/loc/store-1
        - name: rfid_time
          in: query
          description: Date and time of the RFID count.
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovedDifferenceListSummary'
      security:
        - bearerAuth: []
  /approved_difference_list/v1/export:
    get:
      tags:
        - Approved difference list API
      summary: Export
      description: 'Exports an approved difference list, using the approved difference list identifier. This endpoint returns the approved difference list with only one quantity per GTIN: the RFID quantity if the difference for that GTIN has been approved, otherwise the ERP quantity. This endpoint returns all GTINs, even the ones where RFID and ERP quantities are equal.'
      operationId: exportApprovedDifferenceList
      parameters:
        - name: id
          in: query
          description: Approved difference list identifier.
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: uuid
          example: 96fb929a-80a7-4ddf-ac42-f153838383bb
        - name: include_articles
          in: query
          description: Whether to include article details like name, size, etc. in the response.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovedDifferenceListExportResponse'
      security:
        - bearerAuth: []
  /approved_difference_list/v1/update_export_status:
    post:
      tags:
        - Approved difference list API
      summary: Update export status
      description: Updates the export status of an approved difference list.
      operationId: updateApprovedDifferenceListExportStatus
      requestBody:
        description: Update export status request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovedDifferenceListExportStatusUpdateRequest'
        required: true
      responses:
        '204':
          description: Success
      security:
        - bearerAuth: []
  /article/v3/create_or_replace:
    post:
      tags:
        - Article API
      summary: Create or replace
      description: Creates or replaces article(s). Articles are replaced using the GTIN as primary key.
      operationId: createOrReplaceArticles
      requestBody:
        description: A list of articles that should be created or replaced.
        content:
          application/json:
            schema:
              maxItems: 10000
              type: array
              items:
                $ref: '#/components/schemas/Article'
        required: true
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /article/v2/retrieve:
    get:
      tags:
        - Article API
      summary: Retrieve
      description: Retrieves articles. Optionally specify updated_after to retrieve articles updated after the given date and time. Use the skip and count parameters for pagination of results.
      operationId: retrieveArticles
      parameters:
        - name: updated_after
          in: query
          description: 'Articles updated on or after this date and time. When omitted: return all articles.'
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: skip
          in: query
          description: 'Skip this number of articles. When omitted: skip none.'
          required: false
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: count
          in: query
          description: 'Return this number of articles. The maximum number of returned articles is limited to 50.000. When omitted: return 100 articles.'
          required: false
          style: form
          explode: true
          schema:
            maximum: 50000
            minimum: 1
            type: integer
            format: int32
            default: 100
        - name: fields[]
          in: query
          description: List of fields (properties) of the article to return. Use this to limit the amount of data when not all article fields are needed. When omitted, all available fields are returned. Names of the fields should be given exactly as they appear in the API response. The GTIN field is always returned.
          required: false
          style: form
          explode: true
          schema:
            maxItems: 100
            type: array
            items:
              maxLength: 255
              type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
      security:
        - bearerAuth: []
  /article/v2/retrieve_by_gtin:
    get:
      tags:
        - Article API
      summary: Retrieve by GTIN
      description: Retrieves articles associated with the given GTINs.
      operationId: retrieveArticlesByGtin
      parameters:
        - name: gtins[]
          in: query
          description: The GTIN(s) of the articles that should be returned. Repeat key-value for retrieving multiple GTINs.
          required: true
          style: form
          explode: true
          schema:
            maxItems: 50000
            minItems: 1
            type: array
            items:
              pattern: ^\d{14}$
              type: string
        - name: fields[]
          in: query
          description: List of fields (properties) of the article to return. Use this to limit the amount of data when not all article fields are needed. When omitted, all available fields are returned. Names of the fields should be given exactly as they appear in the API response. The GTIN field is always returned.
          required: false
          style: form
          explode: true
          schema:
            maxItems: 100
            type: array
            items:
              maxLength: 255
              type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
      security:
        - bearerAuth: []
  /article/v2/retrieve_by_barcode:
    get:
      tags:
        - Article API
      summary: Retrieve by barcode
      description: Retrieves articles associated with the given barcode values.
      operationId: retrieveArticlesByBarcode
      parameters:
        - name: barcodes[]
          in: query
          description: The barcode(s) of the articles that should be returned. Repeat key-value for retrieving multiple barcodes.
          required: true
          style: form
          explode: true
          schema:
            maxItems: 50000
            minItems: 1
            type: array
            items:
              maxLength: 255
              type: string
        - name: fields[]
          in: query
          description: List of fields (properties) of the article to return. Use this to limit the amount of data when not all article fields are needed. When omitted, all available fields are returned. Names of the fields should be given exactly as they appear in the API response. The GTIN field is always returned.
          required: false
          style: form
          explode: true
          schema:
            maxItems: 100
            type: array
            items:
              maxLength: 255
              type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
      security:
        - bearerAuth: []
  /article/v2/retrieve_by_sku_code:
    get:
      tags:
        - Article API
      summary: Retrieve by SKU code
      description: 'Retrieves articles associated with the given SKU codes. Note: this endpoint will not return more than 50000 articles, even if there are more matches.'
      operationId: retrieveArticlesBySkuCode
      parameters:
        - name: sku_codes[]
          in: query
          description: The SKU code(s) of the articles that should be returned. Repeat key-value for retrieving multiple SKU codes.
          required: true
          style: form
          explode: true
          schema:
            maxItems: 50000
            minItems: 1
            type: array
            items:
              maxLength: 255
              type: string
        - name: fields[]
          in: query
          description: List of fields (properties) of the article to return. Use this to limit the amount of data when not all article fields are needed. When omitted, all available fields are returned. Names of the fields should be given exactly as they appear in the API response. The GTIN field is always returned.
          required: false
          style: form
          explode: true
          schema:
            maxItems: 100
            type: array
            items:
              maxLength: 255
              type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
      security:
        - bearerAuth: []
  /article/v2/retrieve_by_option_code:
    get:
      tags:
        - Article API
      summary: Retrieve by option code
      description: 'Retrieves articles associated with the given option codes. The option codes will be matched to the field `option_code`. Note: this endpoint will not return more than 10000 articles, even if there are more matches.'
      operationId: retrieveArticlesByOptionCode
      parameters:
        - name: option_codes[]
          in: query
          description: The option code(s) of the articles that should be returned. Repeat key-value for retrieving multiple option codes.
          required: true
          style: form
          explode: true
          schema:
            maxItems: 10000
            minItems: 1
            type: array
            items:
              maxLength: 255
              type: string
        - name: fields[]
          in: query
          description: List of fields (properties) of the article to return. Use this to limit the amount of data when not all article fields are needed. When omitted, all available fields are returned. Names of the fields should be given exactly as they appear in the API response. The GTIN field is always returned.
          required: false
          style: form
          explode: true
          schema:
            maxItems: 100
            type: array
            items:
              maxLength: 255
              type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
      security:
        - bearerAuth: []
  /article/v2/find:
    get:
      tags:
        - Article API
      summary: Find
      description: Finds articles based on a search query that allows search in all fields. Use the skip and count parameters for pagination of results.
      operationId: findArticles
      parameters:
        - name: query
          in: query
          description: Search query. Comma separated values to search for in the articles database (‘AND' query). Search will be executed on all fields and is case insensitive
          required: false
          style: form
          explode: true
          schema:
            maxLength: 1024
            type: string
            default: '*'
          example: shirt,XXL
        - name: skip
          in: query
          description: 'Skip this number of articles. When omitted: skip none.'
          required: false
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: count
          in: query
          description: 'Return this number of articles. The maximum number of returned articles is limited to 50.000. When omitted: return 100 articles.'
          required: false
          style: form
          explode: true
          schema:
            maximum: 50000
            minimum: 1
            type: integer
            format: int32
            default: 100
        - name: extern_ref
          in: query
          description: This can be used to match requests with responses from the server (for example, Ajax requests are asynchronous and thus can return out of sequence).
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
        - name: order[]
          in: query
          description: 'Column to which ordering should be applied. When omitted: default order wil be based on score.'
          required: false
          style: form
          explode: true
          schema:
            maxItems: 100
            type: array
            items:
              maxLength: 255
              type: string
          example: color, name, barcodes.value
        - name: fields[]
          in: query
          description: List of fields (properties) of the article to return. Use this to limit the amount of data when not all article fields are needed. When omitted, all available fields are returned. Names of the fields should be given exactly as they appear in the API response. The GTIN field is always returned.
          required: false
          style: form
          explode: true
          schema:
            maxItems: 100
            type: array
            items:
              maxLength: 255
              type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleFindResponse'
      security:
        - bearerAuth: []
  /article/v2/quantity:
    get:
      tags:
        - Article API
      summary: Retrieve quantity
      description: Returns the total quantity of articles stored.
      operationId: getArticleQuantity
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuantityResponse'
      security:
        - bearerAuth: []
  /article/v3/delete:
    delete:
      tags:
        - Article API
      summary: Delete specific articles
      description: Deletes specified articles from the database. This cannot be undone! Please note the articles are not deleted from the apps. To do that, reset the app and re-register using the QR code.
      operationId: deleteArticles
      parameters:
        - name: gtins[]
          in: query
          description: GTIN(s) to delete. Repeat key-value for deleting multiple articles.
          required: true
          style: form
          explode: true
          schema:
            maxItems: 10000
            type: array
            items:
              maxLength: 14
              pattern: ^\d{14}$
              type: string
      responses:
        '204':
          description: Success
        '400':
          description: 'Required field missing: gtins'
      security:
        - bearerAuth: []
  /article/v3/delete_all:
    delete:
      tags:
        - Article API
      summary: Delete all articles
      description: Deletes all articles from the database. This cannot be undone! Please note the articles are not deleted from the apps. To do that, reset the app and re-register using the QR code.
      operationId: deleteAllArticles
      responses:
        '204':
          description: Success
      security:
        - bearerAuth: []
  /difference_list/v1/retrieve:
    get:
      tags:
        - Difference list API
      summary: Retrieve
      description: Retrieves GTIN-based difference list for a single location. By default, only items with an ERP stock quantity that is different from the RFID count quantity are returned.
      operationId: retrieveDifferenceList
      parameters:
        - name: erp_stock_id
          in: query
          description: Identifier of the ERP stock to use.
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            minLength: 1
            type: string
          example: e8a2a3b8-ea3d-4ab6-857b-db1ae25de2e9
        - name: time
          in: query
          description: Date and time of the RFID count to be used.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: only_differences
          in: query
          description: When set to true, only differences will be returned. When set to false, all GTINs in the ERP stock or RFID stock will be returned (except when both are zero).
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: true
        - name: include_articles
          in: query
          description: Whether to include article details like name, size, etc. in the response.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DifferenceListResponse'
            application/csv:
              schema:
                $ref: '#/components/schemas/DifferenceListResponse'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/DifferenceListResponse'
        '400':
          description: 'Required field missing: location'
        '404':
          description: No RFID count for specified time
        '412':
          description: No RFID count for location
      security:
        - bearerAuth: []
  /difference_list/v1/retrieve_grouped_by_category:
    get:
      tags:
        - Difference list API
      summary: Retrieve (grouped by category)
      description: Retrieves GTIN-based difference list for a single location. By default, only items with an ERP stock quantity that is different from the RFID count quantity are returned. Items in difference are grouped by article category.
      operationId: retrieveDifferenceListGroupedByCategory
      parameters:
        - name: erp_stock_id
          in: query
          description: Identifier of the ERP stock to use.
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            minLength: 1
            type: string
          example: e8a2a3b8-ea3d-4ab6-857b-db1ae25de2e9
        - name: time
          in: query
          description: Date and time of the RFID count to be used.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: only_differences
          in: query
          description: When set to true, only differences will be returned. When set to false, all GTINs in the ERP stock or RFID stock will be returned (except when both are zero).
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: true
        - name: include_articles
          in: query
          description: Whether to include article details like name, size, etc. in the response.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DifferenceListByCategoryResponse'
            application/csv:
              schema:
                $ref: '#/components/schemas/DifferenceListByCategoryResponse'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/DifferenceListByCategoryResponse'
        '400':
          description: 'Required field missing: location.'
        '404':
          description: No RFID count for specified time
        '412':
          description: No RFID count for location
      security:
        - bearerAuth: []
  /display_compliance/v1/create_or_replace:
    post:
      tags:
        - Display compliance API
      summary: Create or replace
      description: Create or replace a display compliance suggestions list. Any previous display compliance suggestions list (for that given store) will be replaced. Note that each article as referred by the GTIN must exist in the !D Cloud article database. If it doesn't exist then error code 400 is returned. Same applies for the location. Note that field "record_time" is automatically filled by !D Cloud and thus should be omitted from the input.
      operationId: createOrReplaceDisplayCompliance
      requestBody:
        description: A display compliance suggestions list.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisplayCompliance'
        required: true
      responses:
        '204':
          description: Success
        '400':
          description: '- One ore more required fields are missing or have invalid format. - Location doesn''t exist. - Number of put-on and take-off suggestions exceeding 50K. - Article as referred by option code doesn''t exist in the !D Cloud article database.'
      security:
        - bearerAuth: []
  /display_compliance/v1/retrieve:
    get:
      tags:
        - Display compliance API
      summary: Retrieve
      description: Response contains a list of put-on suggestions for the requested store. The put-on suggestions are ordered by 1) "stars" and 2) "priority". For each put-on suggestions there can be 0, 1 or more take-off suggestions. The take-off suggestions are ordered by priority.
      operationId: retrieveDisplayCompliance
      parameters:
        - name: location
          in: query
          description: Location ID of store.
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: http://nedapretail.com/loc/store-999
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DisplayCompliance'
        '400':
          description: Invalid request
        '404':
          description: When no display compliance suggestion list exists for given store.
      security:
        - bearerAuth: []
  /display_compliance/v1/delete:
    delete:
      tags:
        - Display compliance API
      summary: Delete
      description: Deletes the display compliance suggestion list for the specified store.
      operationId: deleteDisplayCompliance
      parameters:
        - name: location
          in: query
          description: Location ID of store.
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: http://nedapretail.com/loc/store-999
      responses:
        '204':
          description: Success
        '400':
          description: Invalid request.
        '404':
          description: When no display compliance suggestion list exists for given store.
      security:
        - bearerAuth: []
  /epcis/v3/capture:
    post:
      tags:
        - EPCIS API
      summary: Capture
      description: Captures and stores EPCIS events. This does not imply any relationship between these EPCIS events.
      operationId: captureEpcisEvents
      requestBody:
        description: A list of EPCIS events to be captured.
        content:
          application/json:
            schema:
              maxItems: 10000
              type: array
              items:
                $ref: '#/components/schemas/EpcisEvent'
        required: true
      responses:
        '200':
          description: Success
      security:
        - bearerAuth: []
  /epcis/v3/query:
    post:
      tags:
        - EPCIS API
      summary: Query V3
      description: Queries and retrieves EPCIS event(s) that match the criteria specified in the query parameters. If no query parameters are provided, the query will match all EPCIS events. If more than one query parameters are provided, events are returned only if they match for all the parameters. If more than one value for a query parameter is provided, events must match at least one of the values. Cursors can be used to iterate through large result sets. See the guidelines on the developer portal for more information on how to use cursors, and the details about the supported parameters.
      operationId: queryEpcisEventsV3
      requestBody:
        description: Query parameter object. If two or more query parameters are defined, then the AND operation is always applied.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EpcisQueryRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpcisQueryResponse'
      security:
        - bearerAuth: []
  /epcis/v3/query_long_term:
    post:
      tags:
        - EPCIS API
      summary: Query long term storage V3
      description: Queries and retrieves EPCIS event(s) from the EPCIS long term storage. This API provides access to all EPCIS events that are captured and stored in the EPCIS repository, where the `/epcis/v3/query` API provides access to only the EPCIS events that are captured in the last 24 months. However, this API is less flexible when compared to `/epcis/v3/query`, where it only allows to search based on event time, disposition, business step and business location. If no query parameters are provided, the query will match all EPCIS events. If more than one query parameter is provided, events are returned only if they match all parameters. If more than one value for a query parameter is provided, events must match at least one of the values. Cursors are used to iterate through large result sets. This means that this API will never report an error if there are more events matching the query than returned. The `has_more` field in the response will be set to `true` if there are more events matching than returned. The `next_cursor` field will contain the cursor that can be used to retrieve the next batch of EPCIS events. See the guidelines on the developer portal for more information on how to use cursors, and the details about the supported parameters.
      operationId: queryLongTermEpcisEventsV3
      requestBody:
        description: If two or more query parameters are defined, then the AND operation is always applied.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EpcisQueryLongTermRequest'
        required: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpcisQueryResponse'
      security:
        - bearerAuth: []
  /erp_stock/v1/create:
    post:
      tags:
        - ERP stock API
      summary: Create
      description: Creates a snapshot of the stock levels of a store according to the ERP system ("ERP stock").
      operationId: createErpStock
      requestBody:
        description: The ERP stock to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErpStockCreateRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErpStockCreateResponse'
      security:
        - bearerAuth: []
  /erp_stock/v1/list:
    get:
      tags:
        - ERP stock API
      summary: List
      description: Lists the ERP stock summaries for a given location. This endpoint returns maximum 100 summaries per call.
      operationId: listErpStocks
      parameters:
        - name: location
          in: query
          description: The location for which to list the ERP stocks.
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            minLength: 1
            type: string
        - name: from_event_time
          in: query
          description: Retrieve the ERP stock summaries from this time.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: until_event_time
          in: query
          description: Retrieve the ERP stock summaries until this time.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErpStockSummary'
      security:
        - bearerAuth: []
  /erp_stock/v1/retrieve:
    get:
      tags:
        - ERP stock API
      summary: Retrieve
      description: Retrieves details of an ERP stock for a given identifier.
      operationId: retrieveErpStock
      parameters:
        - name: id
          in: query
          description: The identifier of the ERP stock to retrieve.
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            minLength: 1
            type: string
        - name: with_excluded
          in: query
          description: Boolean parameter that indicates if we want to include excluded GTINs from ERP stock.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErpStock'
      security:
        - bearerAuth: []
  /erp_stock/v1/retrieve_summary:
    get:
      tags:
        - ERP stock API
      summary: Retrieve summary
      description: Retrieves a summary for an ERP stock.
      operationId: retrieveErpStockSummary
      parameters:
        - name: id
          in: query
          description: The identifier of the ERP stock summary to retrieve.
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            minLength: 1
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErpStockSummary'
      security:
        - bearerAuth: []
  /kpi/v1/approved_difference_list_accuracy:
    get:
      tags:
        - KPI API
      summary: Approved difference list accuracy
      description: Provides weekly approved difference list accuracy for organization or division.
      operationId: retrieveApprovedDifferenceListAccuracyWeeklyInfo
      parameters:
        - name: location
          in: query
          description: Optional. String, location identifier from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with division_id.
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: http://nedapretail.com/loc/store-123
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with location.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: number_of_weeks
          in: query
          description: Optional. Number of weeks to go in history (minimum 1, maximum 53). If omitted default is 10. Mutually exclusive with from_week and to_week parameters.
          required: false
          style: form
          explode: true
          schema:
            maximum: 53
            minimum: 1
            type: integer
            format: int32
            default: 10
          example: 10
        - name: from_week
          in: query
          description: Optional. Starting point in time from which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with to_week parameter. Must be less than to_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: to_week
          in: query
          description: Optional. Ending point in time to which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with from_week parameter. Must be greater than from_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-05
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiWeeklyResponse'
      security:
        - bearerAuth: []
  /kpi/v1/approved_difference_list_accuracy_last_week:
    get:
      tags:
        - KPI API
      summary: Approved difference list accuracy (last week)
      description: Provides last week's approved difference list accuracy for organization or division.
      operationId: retrieveApprovedDifferenceListAccuracyRecentDaysInfo
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /kpi/v1/approved_difference_list_accuracy_week:
    get:
      tags:
        - KPI API
      summary: Approved difference list accuracy (specific week)
      description: Provides approved difference list accuracy for organization or division for specific week.
      operationId: retrieveApprovedDifferenceListAccuracySpecificWeek
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: year_week
          in: query
          description: Mandatory. Specific week for which to return aggregates. Must be in yyyy-ww format.
          required: true
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /kpi/v1/approved_difference_list_category_accuracy:
    get:
      tags:
        - KPI API
      summary: Approved difference list accuracy per category
      description: Provides weekly approved difference list accuracy per category for organization or division.
      operationId: retrieveApprovedDifferenceListCategoryAccuracyWeeklyInfo
      parameters:
        - name: location
          in: query
          description: Optional. String, location identifier from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with division_id.
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: http://nedapretail.com/loc/store-123
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with location.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: number_of_weeks
          in: query
          description: Optional. Number of weeks to go in history (minimum 1, maximum 53). If omitted default is 10. Mutually exclusive with from_week and to_week parameters.
          required: false
          style: form
          explode: true
          schema:
            maximum: 53
            minimum: 1
            type: integer
            format: int32
            default: 10
          example: 10
        - name: from_week
          in: query
          description: Optional. Starting point in time from which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with to_week parameter. Must be less than to_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: to_week
          in: query
          description: Optional. Ending point in time to which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with from_week parameter. Must be greater than from_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-05
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiWeeklyResponse'
      security:
        - bearerAuth: []
  /kpi/v1/approved_difference_list_category_accuracy_last_week:
    get:
      tags:
        - KPI API
      summary: Approved difference list accuracy per category (last week)
      description: Provides last week's approved difference list accuracy per category for organization or division.
      operationId: retrieveApprovedDifferenceListCategoryAccuracyRecentDaysInfo
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysCategoryAccuracyResponse'
      security:
        - bearerAuth: []
  /kpi/v1/count_duration:
    get:
      tags:
        - KPI API
      summary: Count duration
      description: Provides weekly count duration for organization or division.
      operationId: retrieveCountDurationWeeklyInfo
      parameters:
        - name: location
          in: query
          description: Optional. String, location identifier from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with division_id.
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: http://nedapretail.com/loc/store-123
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with location.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: number_of_weeks
          in: query
          description: Optional. Number of weeks to go in history (minimum 1, maximum 53). If omitted default is 10. Mutually exclusive with from_week and to_week parameters.
          required: false
          style: form
          explode: true
          schema:
            maximum: 53
            minimum: 1
            type: integer
            format: int32
            default: 10
          example: 10
        - name: from_week
          in: query
          description: Optional. Starting point in time from which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with to_week parameter. Must be less than to_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: to_week
          in: query
          description: Optional. Ending point in time to which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with from_week parameter. Must be greater than from_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-05
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiWeeklyResponse'
      security:
        - bearerAuth: []
  /kpi/v1/count_duration_last_week:
    get:
      tags:
        - KPI API
      summary: Count duration (last week)
      description: Provides last week's count duration for organization or division.
      operationId: retrieveCountDurationRecentDaysInfo
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /kpi/v1/count_duration_week:
    get:
      tags:
        - KPI API
      summary: Count duration (specific week)
      description: Return count duration for organization or division for specific week.
      operationId: retrieveCountDurationSpecificWeek
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: year_week
          in: query
          description: Mandatory. Specific week for which to return aggregates. Must be in yyyy-ww format.
          required: true
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /kpi/v1/count_progress:
    get:
      tags:
        - KPI API
      summary: Count progress
      description: Provides weekly count progress for organization or division.
      operationId: retrieveCountProgressWeeklyInfo
      parameters:
        - name: location
          in: query
          description: Optional. String, location identifier from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with division_id.
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: http://nedapretail.com/loc/store-123
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with location.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: number_of_weeks
          in: query
          description: Optional. Number of weeks to go in history (minimum 1, maximum 53). If omitted default is 10. Mutually exclusive with from_week and to_week parameters.
          required: false
          style: form
          explode: true
          schema:
            maximum: 53
            minimum: 1
            type: integer
            format: int32
            default: 10
          example: 10
        - name: from_week
          in: query
          description: Optional. Starting point in time from which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with to_week parameter. Must be less than to_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: to_week
          in: query
          description: Optional. Ending point in time to which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with from_week parameter. Must be greater than from_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-05
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiWeeklyResponse'
      security:
        - bearerAuth: []
  /kpi/v1/count_progress_last_week:
    get:
      tags:
        - KPI API
      summary: Count progress (last week)
      description: Provides last week's count progress for organization or division.
      operationId: retrieveCountProgressRecentDaysInfo
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /kpi/v1/count_progress_week:
    get:
      tags:
        - KPI API
      summary: Count progress (specific week)
      description: Provides count progress for organization or division for specific week.
      operationId: retrieveCountProgressSpecificWeek
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: year_week
          in: query
          description: Mandatory. Specific week for which to return aggregates. Must be in yyyy-ww format.
          required: true
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /kpi/v1/count_status:
    get:
      tags:
        - KPI API
      summary: Count status
      description: Provides weekly count status for organization or division.
      operationId: retrieveCountStatusWeeklyInfo
      parameters:
        - name: location
          in: query
          description: Optional. String, location identifier from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with division_id.
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: http://nedapretail.com/loc/store-123
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with location.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: number_of_weeks
          in: query
          description: Optional. Number of weeks to go in history (minimum 1, maximum 53). If omitted default is 10. Mutually exclusive with from_week and to_week parameters.
          required: false
          style: form
          explode: true
          schema:
            maximum: 53
            minimum: 1
            type: integer
            format: int32
            default: 10
          example: 10
        - name: from_week
          in: query
          description: Optional. Starting point in time from which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with to_week parameter. Must be less than to_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: to_week
          in: query
          description: Optional. Ending point in time to which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with from_week parameter. Must be greater than from_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-05
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiWeeklyResponse'
      security:
        - bearerAuth: []
  /kpi/v1/count_status_last_week:
    get:
      tags:
        - KPI API
      summary: Count status (last week)
      description: Provides last week's count status for organization or division.
      operationId: retrieveCountStatusRecentDaysInfo
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /kpi/v1/count_status_week:
    get:
      tags:
        - KPI API
      summary: Count status (specific week)
      description: Provides count status for organization or division for specific week.
      operationId: retrieveCountStatusSpecificWeek
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: year_week
          in: query
          description: Mandatory. Specific week for which to return aggregates. Must be in yyyy-ww format.
          required: true
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /kpi/v1/count_total_duration:
    get:
      tags:
        - KPI API
      summary: Total count duration
      description: Provides weekly total count duration for organization or division.
      operationId: retrieveCountTotalDurationWeeklyInfo
      parameters:
        - name: location
          in: query
          description: Optional. String, location identifier from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with division_id.
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: http://nedapretail.com/loc/store-123
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with location.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: number_of_weeks
          in: query
          description: Optional. Number of weeks to go in history (minimum 1, maximum 53). If omitted default is 10. Mutually exclusive with from_week and to_week parameters.
          required: false
          style: form
          explode: true
          schema:
            maximum: 53
            minimum: 1
            type: integer
            format: int32
            default: 10
          example: 10
        - name: from_week
          in: query
          description: Optional. Starting point in time from which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with to_week parameter. Must be less than to_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: to_week
          in: query
          description: Optional. Ending point in time to which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with from_week parameter. Must be greater than from_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-05
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiWeeklyResponse'
      security:
        - bearerAuth: []
  /kpi/v1/count_total_duration_last_week:
    get:
      tags:
        - KPI API
      summary: Total count duration (last week)
      description: Provides last week's total count duration for organization or division.
      operationId: retrieveCountTotalDurationRecentDaysInfo.
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /kpi/v1/count_total_duration_week:
    get:
      tags:
        - KPI API
      summary: Total count duration (specific week)
      description: Provides total count duration for organization or division for specific week.
      operationId: retrieveCountTotalDurationSpecificWeek
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: year_week
          in: query
          description: Mandatory. Specific week for which to return aggregates. Must be in yyyy-ww format.
          required: true
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /kpi/v1/difference_list_accuracy:
    get:
      tags:
        - KPI API
      summary: Difference list accuracy
      description: Provides weekly difference list accuracy for organization or division.
      operationId: retrieveDifferenceListAccuracyWeeklyInfo
      parameters:
        - name: location
          in: query
          description: Optional. String, location identifier from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with division_id.
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: http://nedapretail.com/loc/store-123
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with location.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: number_of_weeks
          in: query
          description: Optional. Number of weeks to go in history (minimum 1, maximum 53). If omitted default is 10. Mutually exclusive with from_week and to_week parameters.
          required: false
          style: form
          explode: true
          schema:
            maximum: 53
            minimum: 1
            type: integer
            format: int32
            default: 10
          example: 10
        - name: from_week
          in: query
          description: Optional. Starting point in time from which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with to_week parameter. Must be less than to_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: to_week
          in: query
          description: Optional. Ending point in time to which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with from_week parameter. Must be greater than from_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-05
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiWeeklyResponse'
      security:
        - bearerAuth: []
  /kpi/v1/difference_list_accuracy_last_week:
    get:
      tags:
        - KPI API
      summary: Difference list accuracy (last week)
      description: Provides last week's difference list accuracy for organization or division.
      operationId: retrieveDifferenceListAccuracyRecentDaysInfo
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /kpi/v1/difference_list_accuracy_week:
    get:
      tags:
        - KPI API
      summary: Difference list accuracy (specific week)
      description: Provides difference list accuracy for organization or division for specific week.
      operationId: retrieveDifferenceListAccuracySpecificWeek
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: year_week
          in: query
          description: Mandatory. Specific week for which to return aggregates. Must be in yyyy-ww format.
          required: true
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /kpi/v1/on_shelf_availability:
    get:
      tags:
        - KPI API
      summary: On shelf availability
      description: Provides weekly on shelf availability for organization or division.
      operationId: retrieveOnShelfAvailabilityWeeklyInfo
      parameters:
        - name: location
          in: query
          description: Optional. String, location identifier from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with division_id.
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: http://nedapretail.com/loc/store-123
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with location.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: number_of_weeks
          in: query
          description: Optional. Number of weeks to go in history (minimum 1, maximum 53). If omitted default is 10. Mutually exclusive with from_week and to_week parameters.
          required: false
          style: form
          explode: true
          schema:
            maximum: 53
            minimum: 1
            type: integer
            format: int32
            default: 10
          example: 10
        - name: from_week
          in: query
          description: Optional. Starting point in time from which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with to_week parameter. Must be less than to_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: to_week
          in: query
          description: Optional. Ending point in time to which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with from_week parameter. Must be greater than from_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-05
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiWeeklyResponse'
      security:
        - bearerAuth: []
  /kpi/v1/on_shelf_availability_last_week:
    get:
      tags:
        - KPI API
      summary: On shelf availability (last week)
      description: Provides last week's on shelf availability for organization or division.
      operationId: retrieveOnShelfAvailabilityRecentDaysInfo
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /kpi/v1/on_shelf_availability_week:
    get:
      tags:
        - KPI API
      summary: On shelf availability (specific week)
      description: Provides on shelf availability for organization or division for specific week.
      operationId: retrieveOnShelfAvailabilitySpecificWeek
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: year_week
          in: query
          description: Mandatory. Specific week for which to return aggregates. Must be in yyyy-ww format.
          required: true
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /kpi/v2/on_shelf_availability:
    get:
      tags:
        - KPI API
      summary: On shelf availability (V2)
      description: Provides weekly on shelf availability for organization or division.
      operationId: retrieveOnShelfAvailabilityWeeklyInfoV2
      parameters:
        - name: location
          in: query
          description: Optional. String, location identifier from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with division_id.
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: http://nedapretail.com/loc/store-123
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with location.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: number_of_weeks
          in: query
          description: Optional. Number of weeks to go in history (minimum 1, maximum 53). If omitted default is 10. Mutually exclusive with from_week and to_week parameters.
          required: false
          style: form
          explode: true
          schema:
            maximum: 53
            minimum: 1
            type: integer
            format: int32
            default: 10
          example: 10
        - name: from_week
          in: query
          description: Optional. Starting point in time from which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with to_week parameter. Must be less than to_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: to_week
          in: query
          description: Optional. Ending point in time to which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with from_week parameter. Must be greater than from_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-05
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiWeeklyResponse'
      security:
        - bearerAuth: []
  /kpi/v2/on_shelf_availability_last_week:
    get:
      tags:
        - KPI API
      summary: On shelf availability (last week) V2
      description: Provides last week's on shelf availability for organization or division.
      operationId: retrieveOnShelfAvailabilityRecentDaysInfoV2
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /kpi/v2/on_shelf_availability_week:
    get:
      tags:
        - KPI API
      summary: On shelf availability (specific week) V2
      description: Provides on shelf availability for organization or division for specific week.
      operationId: retrieveOnShelfAvailabilitySpecificWeekV2
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: year_week
          in: query
          description: Mandatory. Specific week for which to return aggregates. Must be in yyyy-ww format.
          required: true
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /kpi/v2/on_shelf_availability_daily:
    get:
      tags:
        - KPI API
      summary: On shelf availability daily (V2)
      description: Provides daily on shelf availability V2 for a specific location.
      operationId: retrieveOnShelfAvailabilityDailyInfoV2
      parameters:
        - name: location
          in: query
          description: Required. String, location identifier from device management.
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: http://nedapretail.com/loc/store-123
        - name: number_of_days
          in: query
          description: Optional. Number of days to go in history (minimum 1, maximum 31). If omitted default is 7. Mutually exclusive with from_date and to_date parameters.
          required: false
          style: form
          explode: true
          schema:
            maximum: 31
            minimum: 1
            type: integer
            format: int32
            default: 7
          example: 7
        - name: from_date
          in: query
          description: Optional. Starting point in time from which to return daily aggregates. Must be in yyyy-mm-dd format. Must be specified together with to_day parameter. Must be less than or equal to to_day parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}-\d{2}$
            type: string
          example: '2022-06-01'
        - name: to_date
          in: query
          description: Optional. Ending point in time to which to return daily aggregates. Must be in yyyy-mm-dd format. Must be specified together with from_date parameter. Must be greater than or equal to from_day parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}-\d{2}$
            type: string
          example: '2022-06-07'
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiDailyResponse'
      security:
        - bearerAuth: []
  /kpi/v1/shipment_reliability:
    get:
      tags:
        - KPI API
      summary: Shipment reliability
      description: Provides weekly shipment reliability for organization or division.
      operationId: retrieveShipmentReliabilityWeeklyInfo
      parameters:
        - name: location
          in: query
          description: Optional. String, location identifier from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with division_id.
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: http://nedapretail.com/loc/store-123
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, accuracy for organization will be returned. Mutually exclusive with location.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: number_of_weeks
          in: query
          description: Optional. Number of weeks to go in history (minimum 1, maximum 53). If omitted default is 10. Mutually exclusive with from_week and to_week parameters.
          required: false
          style: form
          explode: true
          schema:
            maximum: 53
            minimum: 1
            type: integer
            format: int32
            default: 10
          example: 10
        - name: from_week
          in: query
          description: Optional. Starting point in time from which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with to_week parameter. Must be less than to_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: to_week
          in: query
          description: Optional. Ending point in time to which to return weekly aggregates. Must be in yyyy-ww format. Must be specified together with from_week parameter. Must be greater than from_week parameter.
          required: false
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-05
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiWeeklyResponse'
      security:
        - bearerAuth: []
  /kpi/v1/shipment_reliability_last_week:
    get:
      tags:
        - KPI API
      summary: Shipment reliability (last week)
      description: Provides last week's shipment reliability for organization or division.
      operationId: retrieveShipmentReliabilityRecentDaysInfo
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /kpi/v1/shipment_reliability_week:
    get:
      tags:
        - KPI API
      summary: Shipment reliability (specific week)
      description: Provides shipment reliability for organization or division for specific week.
      operationId: retrieveShipmentReliabilitySpecificWeek
      parameters:
        - name: division_id
          in: query
          description: Optional. Numeric division ID (target ID) from device management. If omitted, aggregated data for the entire organization is returned.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 2736423
        - name: year_week
          in: query
          description: Mandatory. Specific week for which to return aggregates. Must be in yyyy-ww format.
          required: true
          style: form
          explode: true
          schema:
            pattern: ^\d{4}-\d{2}$
            type: string
          example: 2018-04
        - name: list_stores
          in: query
          description: Optional. If set to true, instead of returning child divisions and stores, it will return flat list of all store descendants (all depth levels) for given division. If set to false, it will return child divisions and stores, only child entities are included, not all descendants. If omitted, defaults to false.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KpiRecentDaysResponse'
      security:
        - bearerAuth: []
  /organization/v1/location:
    get:
      tags:
        - Organization API
      summary: Get location information
      description: Retrieves location information by location identifier.
      operationId: retrieveLocation
      parameters:
        - name: id
          in: query
          description: Location identifier for a location of type 'site' or 'location'.
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: http://nedapretail.com/loc/store-1
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      security:
        - bearerAuth: []
  /organization/v1/retrieve:
    get:
      tags:
        - Organization API
      summary: Retrieve organizations
      description: Retrieves organizations for the current active authentication token.
      operationId: retrieveOrganization
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organizations'
      security:
        - bearerAuth: []
  /organization/v1/sites:
    get:
      tags:
        - Organization API
      summary: List stores
      description: Gets list of stores, optionally filtered by store code. Note that sublocations will not be included in the response.
      operationId: listSites
      parameters:
        - name: store_code
          in: query
          description: Defines the LocationObject to retrieve based on store code.
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
      security:
        - bearerAuth: []
  /organization/v2/list_stores:
    get:
      tags:
        - Organization API v2
      summary: List stores
      description: Gets list of stores.
      operationId: listStores
      parameters:
        - name: division_id
          in: query
          description: If specified, returns stores under the specified division and all of its subdivisions. If omitted, returns all stores.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 123
        - name: fields[]
          in: query
          description: List of fields (properties) of the store to return. Use this to limit the amount of data when not all store fields are needed. Names of the fields should be given exactly as they appear in the API response. When omitted, all fields are returned, except “address” and “sublocations”.
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationStore'
        '404':
          description: When a division_id is given, but there is no division with the given ID.
      security:
        - bearerAuth: []
  /organization/v2/list_divisions:
    get:
      tags:
        - Organization API v2
      summary: List divisions
      description: List the divisions of an organization. If a division_id is provided, divisions are listed from the provided division and below.
      operationId: listDivisions
      parameters:
        - name: division_id
          in: query
          description: If omitted or empty, returns the divisions directly under the DM root division. If specified, returns the divisions under the specified division and all of its subdivisions.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: 123
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationDivision'
        '404':
          description: When a division_id is given, but there is no division with the given ID.
      security:
        - bearerAuth: []
  /organization/v2/retrieve_store:
    get:
      tags:
        - Organization API v2
      summary: Retrieve store
      description: Retrieves store information by location identifier.
      operationId: retrieveStore
      parameters:
        - name: location
          in: query
          description: Location identifier of a store.
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: http://nedapretail.com/loc/store-1
        - name: fields[]
          in: query
          description: List of fields (properties) of the store to return. Use this to limit the amount of data when not all store fields are needed. Names of the fields should be given exactly as they appear in the API response. When omitted, all fields are returned, except “address”.
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationStore'
        '400':
          description: No (or empty) location is specified.
        '404':
          description: There is no store with the given location identifier in the organization, or the location identifier points to a sublocation.
      security:
        - bearerAuth: []
  /rfid_count/v1/list:
    get:
      tags:
        - RFID count API
      summary: List
      description: Lists RFID count summaries for a certain location. This endpoint returns maximum 100 summaries per call.
      operationId: listRfidCounts
      parameters:
        - name: location
          in: query
          description: The location identifier to retrieve the count for.
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            minLength: 1
            type: string
          example: http://nedapretail.com/loc/store-1
        - name: from_event_time
          in: query
          description: Limits the returned list to counts with an event time after the specified date and time.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: until_event_time
          in: query
          description: Limits the returned list to counts with an event time before the specified date and time.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: include_partial_counts
          in: query
          description: Whether to include partial RFID counts in the response.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RfidCountSummary'
        '400':
          description: 'Required field missing: location.'
      security:
        - bearerAuth: []
  /rfid_count/v1/retrieve:
    get:
      tags:
        - RFID count API
      summary: Retrieve
      description: Retrieves an RFID count.
      operationId: retrieveRfidCount
      parameters:
        - name: location
          in: query
          description: The location identifier to retrieve the count for.
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            minLength: 1
            type: string
          example: http://nedapretail.com/loc/store-1
        - name: gtins[]
          in: query
          description: 'Filter by GTIN. When omitted: returns all available GTINs, so no filtering based on GTIN is applied.'
          required: false
          style: form
          explode: true
          schema:
            maxItems: 10000
            type: array
            items:
              maxLength: 14
              pattern: ^\d{14}$
              type: string
        - name: time
          in: query
          description: 'The time of the count to retrieve (relates to the event_time of the count). When omitted: the response will be the latest RFID count.'
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: include_articles
          in: query
          description: Whether to include article details like name, size, etc. in the response.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
        - name: include_partial_counts
          in: query
          description: Whether to include partial RFID counts in the response.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockResponse'
            application/csv:
              schema:
                $ref: '#/components/schemas/StockResponse'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/StockResponse'
        '400':
          description: 'Required field missing: location.'
        '404':
          description: When location could not be found.
        '412':
          description: No RFID count for location.
      security:
        - bearerAuth: []
  /rfid_count/v1/retrieve_sgtins:
    get:
      tags:
        - RFID count API
      summary: Retrieve (SGTINs)
      description: Retrieves an RFID count with SGTINs by id.
      operationId: retrieveRfidCountSgtins
      parameters:
        - name: id
          in: query
          description: Identifier of the RFID count
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            minLength: 1
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RfidCount'
        '400':
          description: 'Required field missing: id.'
        '404':
          description: RFID count could not be found.
      security:
        - bearerAuth: []
  /rfid_stock/v1/epc_state:
    get:
      tags:
        - RFID stock API
      summary: Retrieve state of an EPC
      description: Retrieves state (location, disposition and last update timestamp) of an EPC. Specify the EPC in EPC pure identity (SGTIN) format or hexadecimal format.
      operationId: retrieveEpcState
      parameters:
        - name: epc_uri
          in: query
          description: EPC in EPC pure identity URI (SGTIN) format
          required: false
          style: form
          explode: true
          schema:
            maxLength: 255
            type: string
        - name: epc_hex
          in: query
          description: EPC in hexadecimal format
          required: false
          style: form
          explode: true
          schema:
            maxLength: 255
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpcStateResponse'
        '400':
          description: When parameters are missing or incorrectly formatted.
        '404':
          description: When EPC is not found.
      security:
        - bearerAuth: []
  /rfid_stock/v1/list_epc_states:
    get:
      tags:
        - RFID stock API
      summary: Retrieve state of multiple EPCs
      description: Retrieves state (location, disposition and last update timestamp) of multiple EPCs. Specify the EPCs in EPC pure identity (SGTIN) format, in hexadecimal format, or a mix of both. Retrieves all existing states for EPCs specified in both arrays. At least one EPC (either in pure identity format, or in hexadecimal format) must be provided, otherwise a bad request will be returned. A maximum of 1000 EPCs can be requested. Requesting more EPCs will also return a bad request.
      operationId: retrieveEpcStates
      parameters:
        - name: epc_uris[]
          in: query
          description: Zero or more EPCs in EPC pure identity URI (SGTIN) format
          required: false
          style: form
          explode: true
          schema:
            maxItems: 1000
            type: array
            items:
              maxLength: 255
              type: string
        - name: epc_hexs[]
          in: query
          description: Zero or more EPCs in hexadecimal format
          required: false
          style: form
          explode: true
          schema:
            maxItems: 1000
            type: array
            items:
              maxLength: 255
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EpcStateResponse'
        '400':
          description: When parameters are incorrectly formatted, when no EPCs are requested, or when more than 1000 EPCs are requested.
      security:
        - bearerAuth: []
  /rfid_stock/v1/retrieve:
    get:
      tags:
        - RFID stock API
      summary: Retrieve (SGTINs)
      description: |-
        Returns the real time stock at a certain location in unique items (SGTINs). Items are returned based on their last known bizLocation (location). The response contains a list of stocks for all matching (sub)locations based on the given parameters:
        * If the stock for a store without sublocations is requested, the stocks list in the response will contain one entry containing the stock for the entire store.
        * If a store has sublocations, the list of stocks in the response will contain an entry each for the sublocations.
        * If a store has stock for both sublocations and store, the list of stocks in the response contains entries for the store and the sublocations with stock.
        * When no dispositions are specified, this endpoint only returns items with dispositions urn:epcglobal:cbv:disp:sellable_accessible or urn:epcglobal:cbv:disp:sellable_not_accessible.
      operationId: retrieveRfidStock
      parameters:
        - name: location
          in: query
          description: Location identifier of a store or a sublocation.
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            type: string
          example: http://nedapretail.com/loc/store-1
        - name: location_types[]
          in: query
          description: |-
            Filter on (sub)location types: only stock on (sub)locations of the specified types will be returned. Multiple  (sub)location types can be specified.
            Valid (sub)location types are:
                STOCK_ROOM, SALES_FLOOR,
                OFFSITE_STORAGE,
                FOREIGN and SITE.
            Default behavior is to return stocks for all (sub)location types except FOREIGN.
          required: false
          style: form
          explode: true
          schema:
            maxItems: 5
            type: array
            items:
              maxLength: 16
              type: string
              enum:
                - STOCK_ROOM
                - SALES_FLOOR
                - OFFSITE_STORAGE
                - FOREIGN
                - SITE
          example: STOCK_ROOM
        - name: dispositions[]
          in: query
          description: 'Filter on disposition(s): only stock of the specified disposition(s) will be returned. If omitted, only items with dispositions urn:epcglobal:cbv:disp:sellable_accessible or urn:epcglobal:cbv:disp:sellable_not_accessible are included.'
          required: false
          style: form
          explode: true
          schema:
            maxItems: 100
            type: array
            items:
              maxLength: 255
              type: string
        - name: after_timestamp
          in: query
          description: Only include EPCs in the response that have `timestamp` field greater or equal to specified date/time.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SgtinRfidStockList'
        '493':
          description: Requested stock is too large
      security:
        - bearerAuth: []
  /rfid_stock/v1/retrieve_as_gtin14:
    get:
      tags:
        - RFID stock API
      summary: Retrieve (GTIN/quantity)
      description: |-
        Returns the real time stock at a certain location per GTIN. Items are returned based on their last known bizLocation (location). The response contains a list of stocks for all matching (sub)locations based on the given parameters:
        * If the stock for a store without sublocations is requested, the stocks list in the response will contain one entry containing the stock for the entire store.
        * If a store has sublocations, the list of stocks in the response will contain an entry each for the sublocations.
        * If a store has stock for both sublocations and store, the list of stocks in the response contains entries for the store and the sublocations with stock.
        * When no dispositions are specified, this endpoint only returns items with dispositions urn:epcglobal:cbv:disp:sellable_accessible or urn:epcglobal:cbv:disp:sellable_not_accessible.
      operationId: retrieveRfidStockAsGtin14
      parameters:
        - name: location
          in: query
          description: Location identifier of a store or a sublocation.
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            type: string
          example: http://nedapretail.com/loc/store-1
        - name: location_types[]
          in: query
          description: |-
            Filter on (sub)location types: only stock on (sub)locations of the specified types will be returned. Multiple  (sub)location types can be specified.
            Valid (sub)location types are:
                STOCK_ROOM, SALES_FLOOR,
                OFFSITE_STORAGE,
                FOREIGN and SITE.
            Default behavior is to return stocks for all (sub)location types except FOREIGN.
          required: false
          style: form
          explode: true
          schema:
            maxItems: 5
            type: array
            items:
              maxLength: 16
              type: string
              enum:
                - STOCK_ROOM
                - SALES_FLOOR
                - OFFSITE_STORAGE
                - FOREIGN
                - SITE
          example: STOCK_ROOM
        - name: dispositions[]
          in: query
          description: 'Filter on disposition(s): only stock of the specified disposition(s) will be returned. If omitted, only items with dispositions urn:epcglobal:cbv:disp:sellable_accessible or urn:epcglobal:cbv:disp:sellable_not_accessible are included.'
          required: false
          style: form
          explode: true
          schema:
            maxItems: 100
            type: array
            items:
              maxLength: 255
              type: string
        - name: include_articles
          in: query
          description: Whether to include article details like name, size, etc. in the response.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
        - name: after_timestamp
          in: query
          description: Only include EPCs in the response that have `timestamp` field greater or equal to specified date/time.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GtinRfidStockResponse'
        '493':
          description: Requested stock is too large
      security:
        - bearerAuth: []
  /rfid_stock/v1/retrieve_grouped_by_disposition:
    get:
      tags:
        - RFID stock API
      summary: Retrieve (SGTINs grouped by disposition)
      description: |-
        Returns the real time stock at a certain location in unique items (SGTINs), grouped by disposition. Items are returned based on their last known bizLocation (location). The response contains a list of stocks for all matching (sub)locations based on the given parameters:
        * If the stock for a store without sublocations is requested, the stocks list in the response will contain one entry containing the stock for the entire store.
        * If a store has sublocations, the list of stocks in the response will contain an entry each for the sublocations.
        * If a store has stock for both sublocations and store, the list of stocks in the response contains entries for the store and the sublocations with stock.
        * When no dispositions are specified, this endpoint only returns items with dispositions urn:epcglobal:cbv:disp:sellable_accessible or urn:epcglobal:cbv:disp:sellable_not_accessible.
      operationId: retrieveRfidStockGroupedByDisposition
      parameters:
        - name: location
          in: query
          description: Location identifier of a store or a sublocation.
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            type: string
          example: http://nedapretail.com/loc/store-1
        - name: location_types[]
          in: query
          description: |-
            Filter on (sub)location types: only stock on (sub)locations of the specified types will be returned. Multiple (sub)location types can be specified.
            Valid (sub)location types are:
                STOCK_ROOM, SALES_FLOOR,
                OFFSITE_STORAGE,
                FOREIGN and SITE.
            Default behavior is to return stocks for all (sub)location types except FOREIGN.
          required: false
          style: form
          explode: true
          schema:
            maxItems: 5
            type: array
            items:
              maxLength: 16
              type: string
              enum:
                - STOCK_ROOM
                - SALES_FLOOR
                - OFFSITE_STORAGE
                - FOREIGN
                - SITE
          example: STOCK_ROOM
        - name: dispositions[]
          in: query
          description: 'Filter on disposition(s): only stock of the specified disposition(s) will be returned. If omitted, only items with dispositions urn:epcglobal:cbv:disp:sellable_accessible or urn:epcglobal:cbv:disp:sellable_not_accessible are included.'
          required: false
          style: form
          explode: true
          schema:
            maxItems: 100
            type: array
            items:
              maxLength: 255
              type: string
        - name: after_timestamp
          in: query
          description: Only include EPCs in the response that have `timestamp` field greater or equal to specified date/time.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SgtinRfidStockResponse'
        '493':
          description: Requested stock is too large
      security:
        - bearerAuth: []
  /realtime_stock_mutation/v1/retrieve:
    get:
      tags:
        - Realtime Stock Mutation API
      summary: Retrieve
      description: Returns realtime stock mutation log. Note that all the filter parameters are optional. Maximum number of mutations that can be retrieved per request is limited to 10000. The list is ordered by (first) time and (second) epc descending.
      operationId: retrieveRealtimeStockMutation
      parameters:
        - name: from_time
          in: query
          description: Search for realtime stock mutation logs from or at this datetime.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: until_time
          in: query
          description: Search for realtime stock mutation logs before or at this datetime.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: epc_uris[]
          in: query
          description: Filter on zero or more EPCs values in EPC pure identity URI (SGTIN) format.
          required: false
          style: form
          explode: true
          schema:
            maxItems: 10
            minItems: 1
            type: array
            items:
              maxLength: 255
              type: string
          example: urn:epc:id:sgtin:8716232.080001.1
        - name: gtins[]
          in: query
          description: Filter on GTIN values.
          required: false
          style: form
          explode: true
          schema:
            maxItems: 10
            minItems: 1
            type: array
            items:
              pattern: ^\d{14}$
              type: string
          example: '08716232800012'
        - name: biz_steps[]
          in: query
          description: Filter on biz-step values.
          required: false
          style: form
          explode: true
          schema:
            maxItems: 10
            minItems: 1
            type: array
            items:
              maxLength: 255
              type: string
          example: urn:epcglobal:cbv:bizstep:cycle_counting
        - name: mutation_types[]
          in: query
          description: Filter on mutation types.
          required: false
          style: form
          explode: true
          schema:
            maxItems: 3
            minItems: 1
            type: array
            items:
              type: string
              enum:
                - add
                - update
                - delete
          example: add
        - name: from_locations[]
          in: query
          description: Filter on location identifiers of locations where items were registered on before the mutation.
          required: false
          style: form
          explode: true
          schema:
            maxItems: 10
            minItems: 1
            type: array
            items:
              maxLength: 255
              type: string
          example: http://nedapretail.com/loc/store-1
        - name: from_dispositions[]
          in: query
          description: Filter on dispositions that items had before the mutation.
          required: false
          style: form
          explode: true
          schema:
            maxItems: 10
            minItems: 1
            type: array
            items:
              maxLength: 255
              type: string
          example: urn:epcglobal:cbv:disp:in_transit
        - name: to_locations[]
          in: query
          description: Filter on location identifiers of locations where items are registered on after the mutation.
          required: false
          style: form
          explode: true
          schema:
            maxItems: 10
            minItems: 1
            type: array
            items:
              maxLength: 255
              type: string
          example: http://nedapretail.com/loc/store-2
        - name: to_dispositions[]
          in: query
          description: Filter on disposition(s) that items have after the mutation.
          required: false
          style: form
          explode: true
          schema:
            maxItems: 10
            minItems: 1
            type: array
            items:
              maxLength: 255
              type: string
          example: urn:epcglobal:cbv:disp:sellable_accessible
        - name: count
          in: query
          description: Number of items to retrieve (per request). Default is 500.
          required: false
          style: form
          explode: true
          schema:
            maximum: 10000
            minimum: 1
            type: integer
        - name: pagination_time
          in: query
          description: When response.pagination.has_more from the initial request returns true, you can provide the returned pagination.time (together with pagination_epc_uri) to get the next result set of mutations repeatedly until response.pagination.has_more returns false.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: pagination_epc_uri
          in: query
          description: When response.pagination.has_more from the initial request returns true, you can provide the returned pagination.epc_uri (together with pagination.time) to get the next result set of mutations repeatedly until response.pagination.has_more returns false. This parameter serves as a so called 'tie breaker id' for cases where multiple mutations with the exact same time exist, because the epc_uri then helps us determine the exact position where we "left off".
          required: false
          style: form
          explode: true
          schema:
            maxLength: 255
            type: string
          example: urn:epc:id:sgtin:8716232.080001.1
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealtimeStockMutationSearchResponse'
      security:
        - bearerAuth: []
  /refill/v2/retrieve:
    get:
      tags:
        - Refill API
      summary: Retrieve
      description: An actionable list with items which can or should be replenished from stockroom, either because something is not on shelf but on stock or because a size target is not asserted where it could.
      operationId: retrieveRefillSuggestionListV2
      parameters:
        - name: from_location
          in: query
          description: Location ID of stockroom sublocation
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            minLength: 1
            type: string
        - name: to_location
          in: query
          description: Location ID of sales floor sublocation
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            minLength: 1
            type: string
        - name: dispositions[]
          in: query
          description: |-
            Filter on disposition(s): only refill suggestions of the specified disposition(s) will be returned. Dispositions urn:epcglobal:cbv:disp:retail_sold and urn:epcglobal:cbv:disp:unknown are always excluded. 

            If omitted, only items with dispositions urn:epcglobal:cbv:disp:sellable_accessible, urn:epcglobal:cbv:disp:sellable_not_accessible or urn:epcglobal:cbv:disp:active are included.
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefillResponseV2'
        '400':
          description: Required field missing.
        '404':
          description: No article info available for all GTINs.
      security:
        - bearerAuth: []
  /refill/v2/create_or_replace_targets:
    post:
      tags:
        - Refill API
      summary: Create or replace Size Targets
      description: Creates or replaces Size Targets for refill.
      operationId: createOrReplaceRefillTargets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrReplaceRefillTargetsRequest'
      responses:
        '204':
          description: Success
        '400':
          description: |-
            - Missing required parameter
            - Invalid item_type
            - Number of targets exceeding the maximum
      security:
        - bearerAuth: []
  /refill/v2/retrieve_targets:
    get:
      tags:
        - Refill API
      summary: Retrieve targets
      description: Retrieve the Size Targets that are present for the store.
      operationId: retrieveRefillTargets
      parameters:
        - name: location
          in: query
          description: Location ID of the store
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            minLength: 1
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefillTargetsResponse'
        '400':
          description: Required field missing.
        '404':
          description: No Size Targets found for given store.
      security:
        - bearerAuth: []
  /searchlist/v1/create:
    post:
      tags:
        - Search list API
      summary: Create
      description: Create search list
      operationId: createSearchList
      requestBody:
        description: List of search lists to be created.
        content:
          application/json:
            schema:
              maxItems: 100
              type: array
              items:
                $ref: '#/components/schemas/CreateSearchList'
      responses:
        '200':
          description: The ids for the search lists, in the same order as sent.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Missing required parameter or invalid value for a parameter (type not in allowed list; end_date lies before the start_date; start_date or end_date is more than 1000 days in the future or in the past.
      security:
        - bearerAuth: []
  /searchlist/v1/retrieve:
    get:
      tags:
        - Search list API
      summary: Retrieve
      description: Retrieve a specific search list, given the search list id.
      operationId: retrieveSearchList
      parameters:
        - name: id
          in: query
          description: Search list identifier.
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            type: string
          example: hs7y124dh912y
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchList'
        '400':
          description: Missing required parameter.
        '404':
          description: Search list could not be found.
      security:
        - bearerAuth: []
  /searchlist/v1/retrieve_multiple:
    get:
      tags:
        - Search list API
      summary: Retrieve multiple
      description: Retrieve specific search lists, for the given search list id's. This is limited to 500 search lists at a time.
      operationId: retrieveSearchLists
      parameters:
        - name: ids[]
          in: query
          description: Search list identifiers to retrieve. Repeat key-value for retrieving multiple search lists.
          required: true
          style: form
          explode: true
          schema:
            maxItems: 500
            type: array
            items:
              maxLength: 255
              type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchList'
        '400':
          description: Missing required parameter, invalid value for a parameter or more than 500 search lists requested.
      security:
        - bearerAuth: []
  /searchlist/v1/list_by_store:
    get:
      tags:
        - Search list API
      summary: List by store
      description: Returns a list of search lists for a specific store.
      operationId: listSearchListsByStore
      parameters:
        - name: location
          in: query
          description: Location identifier.
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            type: string
          example: http://nedapretail.com/loc/store-1
        - name: skip
          in: query
          description: Skip this number of search lists.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: count
          in: query
          description: Return this number of search lists (default 100, maximum 1000).
          required: false
          style: form
          explode: true
          schema:
            maximum: 1000
            minimum: 1
            type: integer
            format: int32
            default: 100
        - name: order_by
          in: query
          description: Use this to order the output by the specified field.
          required: false
          style: form
          explode: true
          schema:
            type: string
            default: start_date
            enum:
              - id
              - name
              - start_date
              - end_date
        - name: order_direction
          in: query
          description: If specified and order_by is also specified, specifies whether the results are ordered in ascending or descending sequence according to the key specified by order_by.
          required: false
          style: form
          explode: true
          schema:
            type: string
            default: ascending
            enum:
              - ascending
              - descending
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchListsResponse'
        '400':
          description: Missing required parameter or invalid value for a parameter
      security:
        - bearerAuth: []
  /searchlist/v1/find_by_gtin:
    get:
      tags:
        - Search list API
      summary: Find by GTIN
      description: Returns the search lists that have an entry that matches the article indicated by the specified GTIN. Matching is done on GTIN, option code and/or SKU code of the specified article. Returned search lists only contain the items that match the specified GTIN. This endpoint does not return the full search list, only the matched items to be found.
      operationId: findSearchListsByGtin
      parameters:
        - name: location
          in: query
          description: Location Identifier.
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            type: string
          example: http://nedapretail.com/loc/store-1
        - name: gtin
          in: query
          description: The GTIN of an article to find matching search lists for.
          required: true
          style: form
          explode: true
          schema:
            maxLength: 14
            minLength: 14
            pattern: ^\d{14}$
            type: string
          example: '05012345678900'
        - name: skip
          in: query
          description: Skip this number of search lists.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: count
          in: query
          description: Return this number of search lists (default 100, maximum 1000).
          required: false
          style: form
          explode: true
          schema:
            maximum: 1000
            minimum: 1
            type: integer
            format: int32
            default: 100
        - name: order_by
          in: query
          description: Use this to order the output by the specified field.
          required: false
          style: form
          explode: true
          schema:
            type: string
            default: start_date
            enum:
              - id
              - name
              - start_date
              - end_date
        - name: order_direction
          in: query
          description: If specified and order_by is also specified, specifies whether the results are ordered in ascending or descending sequence according to the key specified by order_by.
          required: false
          style: form
          explode: true
          schema:
            type: string
            default: ascending
            enum:
              - ascending
              - descending
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchListsResponse'
        '400':
          description: Missing required parameter or invalid choice for a parameter.
      security:
        - bearerAuth: []
  /searchlist/v1/finish:
    post:
      tags:
        - Search list API
      summary: Finish
      description: Set a search list state to finish. This will set the finished_at to the current time. If finished_at was already set, it will do nothing and return 204.
      operationId: finishSearchList
      requestBody:
        description: Finish search list request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchListFinishRequest'
        required: true
      responses:
        '204':
          description: Successful operation.
        '400':
          description: Missing required parameter.
        '404':
          description: The search list cannot be found.
      security:
        - bearerAuth: []
  /searchlist/v1/undo_finish:
    post:
      tags:
        - Search list API
      summary: Undo finish
      description: Set a search list to not being finished.
      operationId: undoFinishSearchList
      requestBody:
        description: Undo finish search list request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchListUndoFinishRequest'
        required: true
      responses:
        '204':
          description: Successful operation.
        '400':
          description: Missing required parameter.
        '404':
          description: The search list cannot be found.
      security:
        - bearerAuth: []
  /searchlist/v1/delete:
    delete:
      tags:
        - Search list API
      summary: Delete
      description: Deletes a search list.
      operationId: deleteSearchList
      parameters:
        - name: id
          in: query
          description: Search list identifier
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            type: string
      responses:
        '204':
          description: Successful operation.
        '400':
          description: Missing required parameter.
        '404':
          description: The search list cannot be found.
      security:
        - bearerAuth: []
  /shipment/v2/create_notice:
    post:
      tags:
        - Shipment API v2
      summary: Creates a shipment notice
      description: Create a new shipment notice which results in a shipment with the status in_transit.
      operationId: createShipmentNoticeV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShipmentNotice'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrReplaceShipmentResponse'
        '400':
          description: |-
            - Missing required parameter
            - Too many items
            - Shipment notice already present
      security:
        - bearerAuth: []
  /shipment/v2/retrieve:
    get:
      tags:
        - Shipment API v2
      summary: Retrieve
      description: Retrieve a specific shipment, given the shipment id.
      operationId: retrieveShipmentV2
      parameters:
        - name: id
          in: query
          description: Shipment V2 identifier
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            type: string
          example: http://nedapretail.com/obj/03394db9-29c8-4787-b860-ce954cf4eabc.4561212345
        - name: include_articles
          in: query
          description: Whether to include article details like name, size, etc. in the response.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentV2'
        '400':
          description: Missing required parameter
        '404':
          description: Shipment not found
      security:
        - bearerAuth: []
  /shipment/v2/list:
    get:
      tags:
        - Shipment API v2
      summary: List
      description: Returns all shipments as summaries for the given source and/or destination or status. Either source, destination or external_ref is mandatory. The amount of results is limited to 2000.
      operationId: listShipmentV2
      parameters:
        - name: source
          in: query
          description: Location identifier of the source of the shipment
          required: false
          style: form
          explode: true
          schema:
            maxLength: 255
            type: string
          example: http://nedapretail.com/loc/store-1
        - name: destination
          in: query
          description: Location identifier of the destination of the shipment
          required: false
          style: form
          explode: true
          schema:
            maxLength: 255
            type: string
          example: http://nedapretail.com/loc/store-2
        - name: external_ref
          in: query
          description: External reference
          required: false
          style: form
          explode: true
          schema:
            maxLength: 255
            type: string
          example: 7834632768762
        - name: status
          in: query
          description: Shipment status
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - created
              - ready_to_ship
              - in_transit
              - received
        - name: last_modified_since
          in: query
          description: 'Find shipments that have been modified since specified time. When omitted: default is present minus one month.'
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentSummaryV2'
        '400':
          description: |-
            - Missing required parameter
            - Invalid parameter
      security:
        - bearerAuth: []
  /shipment/v2/retrieve_destinations_by_shipment_type:
    get:
      tags:
        - Shipment API v2
      summary: List destinations
      description: Returns a list of destination locations allowed for the given shipment type. When the shipment_type parameter is omitted, all possible destination locations are returned.
      operationId: retrieveDestinationsByShipmentTypeShipmentV2
      parameters:
        - name: source
          in: query
          description: The source location. Needed when a shipment_type limits the location on the same root division.
          required: false
          style: form
          explode: true
          schema:
            maxLength: 255
            type: string
          example: http://nedapretail.com/loc/room-101
        - name: shipment_type
          in: query
          description: The shipment type name.
          required: false
          style: form
          explode: true
          schema:
            maxLength: 255
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentLocation'
        '400':
          description: Invalid parameter
      security:
        - bearerAuth: []
  /shipment/v2/ship:
    post:
      tags:
        - Shipment API v2
      summary: Ship
      description: The shipment is being shipped and its state will be in transit.
      operationId: shipShipmentV2
      requestBody:
        description: Ship shipment request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipShipmentRequest'
        required: true
      responses:
        '204':
          description: Success
        '400':
          description: |-
            - Missing required parameter
            - Status change not allowed
        '404':
          description: Shipment not found
      security:
        - bearerAuth: []
  /shipment/v2/receive:
    post:
      tags:
        - Shipment API v2
      summary: Receive
      description: Receives a shipment. When a shipment is received without a notice, the id shouldn't be supplied. Then a new shipment will be created and the response will contain the id and external reference.
      operationId: receiveShipmentV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceiveShipmentRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrReplaceShipmentResponse'
        '400':
          description: |-
            - Missing required or invalid parameter
            - Too many items
      security:
        - bearerAuth: []
  /shipment/v2/delete:
    delete:
      tags:
        - Shipment API v2
      summary: Delete
      description: This will delete the specified shipment permanently. This is only allowed when the shipment isn't received yet.
      operationId: deleteShipmentV2
      parameters:
        - name: id
          in: query
          description: Shipment identifier
          required: true
          style: form
          explode: true
          schema:
            maxLength: 255
            type: string
          example: http://nedapretail.com/obj/03394db9-29c8-4787-b860-ce954cf4eabc.4561212345
      responses:
        '204':
          description: Success
        '400':
          description: Missing required parameter or invalid status
        '404':
          description: Shipment not found
      security:
        - bearerAuth: []
  /shipment/v2/update_metadata:
    post:
      tags:
        - Shipment API v2
      summary: Update metadata
      description: This will update specific fields of the shipment.
      operationId: updateMetadataShipmentV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShipmentMetadata'
      responses:
        '204':
          description: Success
        '400':
          description: Missing or invalid parameter
        '404':
          description: Shipment not found
      security:
        - bearerAuth: []
  /shipment/v2/create_or_replace_shipment_type:
    post:
      tags:
        - Shipment API v2
      summary: Create or replace a shipment type
      description: Create a new shipment type. It will be replaced if the name (identifying part) already exists.
      operationId: createOrReplaceShipmentType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentType'
      responses:
        '204':
          description: Successful operation
        '400':
          description: '- Missing required or invalid parameter'
      security:
        - bearerAuth: []
  /shipment/v2/list_shipment_types:
    get:
      tags:
        - Shipment API v2
      summary: List shipment types
      description: Returns a list of shipment types. The amount of results is limited to 250.
      operationId: listShipmentTypes
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentType'
      security:
        - bearerAuth: []
  /shipment/v2/delete_shipment_type:
    delete:
      tags:
        - Shipment API v2
      summary: Delete shipment type
      description: This will delete the specified shipment type permanently.
      operationId: deleteShipmentType
      parameters:
        - name: name
          in: query
          description: Shipment type identifier
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        '204':
          description: Success
        '400':
          description: Missing required parameter
      security:
        - bearerAuth: []
  /shipment/v2/create_or_replace_ptc:
    post:
      tags:
        - Shipment API v2
      summary: Create or replace a PTC
      description: Create a new parcel template code. It will be replaced if the name (identifying part) already exists.
      operationId: createOrReplacePTC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PTC'
      responses:
        '204':
          description: Successful operation
        '400':
          description: '- Missing required or invalid parameter'
      security:
        - bearerAuth: []
  /shipment/v2/retrieve_ptc:
    get:
      tags:
        - Shipment API v2
      summary: Retrieve PTC
      description: Retrieve a specific PTC, given the name.
      operationId: retrievePTC
      parameters:
        - name: name
          in: query
          description: PTC identifier
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: E11
        - name: location
          in: query
          description: The location identifier of the store
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: http://nedapretail.com/loc/store-1
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PTC'
        '400':
          description: Missing required parameter
        '404':
          description: PTC not found
      security:
        - bearerAuth: []
  /shipment/v2/list_ptcs:
    get:
      tags:
        - Shipment API v2
      summary: List PTCs
      description: Returns a list of PTC summaries of all active PTCs. Whether a PTC is active or not is determined by its start- and end date. The amount of results is limited to 250.
      operationId: listPTCs
      parameters:
        - name: location
          in: query
          description: The location identifier of the store
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: http://nedapretail.com/loc/store-1
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PTCSummary'
      security:
        - bearerAuth: []
  /transaction/v2/commission:
    post:
      tags:
        - Transaction API
      summary: Commission
      description: 'Register items that have been commissioned: labels have been printed or programmed and attached to an item. This transaction will be registered as an EPCIS event with bizStep `urn:epcglobal:cbv:bizstep:commissioning` and disposition `urn:epcglobal:cbv:disp:active`.'
      operationId: commissionItemsV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommissionRequestV2'
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /transaction/v2/customize:
    post:
      tags:
        - Transaction API
      summary: Customize
      description: Item(s) are customized. This transaction will be registered as an EPCIS event with bizStep `http://nedapretail.com/bizstep/customizing` and disposition `http://nedapretail.com/disp/customized` when being customized or `http://nedapretail.com/disp/hemming` when being hemmed. Only one of being_customized and being_hemmed may be set to true.
      operationId: customizeItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomizeRequestV2'
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /transaction/v2/display:
    post:
      tags:
        - Transaction API
      summary: Display
      description: Puts item(s) on dispay. This transaction will be registered as an EPCIS event with bizStep `http://nedapretail.com/bizstep/displaying` and disposition `http://nedapretail.com/disp/on_display` when put on display.
      operationId: displayItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisplayRequestV2'
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /transaction/v2/hold:
    post:
      tags:
        - Transaction API
      summary: Hold
      description: 'Item(s) that are (partly) sold are being held for a customer and awaiting pick-up. Examples: click&collect, bopis, lay-bys e.g. This transaction will be registered as an EPCIS event with bizStep `urn:epcglobal:cbv:bizstep:holding` and disposition `urn:epcglobal:cbv:disp:non_sellable_other` when held or `http://nedapretail.com/disp/received_order` when set to received order. Only one of held and received_order may be set to true.'
      operationId: holdItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HoldRequestV2'
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /transaction/v2/inspect:
    post:
      tags:
        - Transaction API
      summary: Inspect
      description: Inspects item(s) which are concluded to be damaged, faulty or missing. This transaction will be registered as an EPCIS event with bizStep `urn:epcglobal:cbv:bizstep:inspecting` and disposition `urn:epcglobal:cbv:disp:damaged` when damaged, `http://nedapretail.com/disp/faulty` when faulty or `http://nedapretail.com/disp/missing_article` when the article is missing. Only one of damaged, fault and article_missing may be set to true.
      operationId: inspectItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InspectRequestV2'
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /transaction/v2/lend:
    post:
      tags:
        - Transaction API
      summary: Lend
      description: Lends item(s) to a third-party. This transaction will be registered as an EPCIS event with bizStep `http://nedapretail.com/bizstep/lending` and disposition `http://nedapretail.com/disp/lent` when lent.
      operationId: lendItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LendRequestV2'
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /transaction/v2/move:
    post:
      tags:
        - Transaction API
      summary: Move
      description: Move item(s) between sublocations within the same store. This transaction will be registered as an EPCIS event with bizStep `urn:epcglobal:cbv:bizstep:storing` when moving to a stockroom, or bizStep `urn:epcglobal:cbv:bizstep:stocking` when moving to a sales floor.
      operationId: moveItemsV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveRequestV2'
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /transaction/v2/reserve:
    post:
      tags:
        - Transaction API
      summary: Reserve
      description: 'Item(s) are temporarily reserved for a customer. The item is awaiting pickup by the customer. Examples: e-reservation, reservation by telephone. This transaction will be registered as an EPCIS event with bizStep `http://nedapretail.com/bizstep/retail_reserving` and disposition `http://nedapretail.com/disp/retail_reserved` when reserved.'
      operationId: reserveItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReserveRequestV2'
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /transaction/v2/return:
    post:
      tags:
        - Transaction API
      summary: Return
      description: Mark items as returned. This transaction will be registered as an EPCIS event with bizStep `urn:epcglobal:cbv:bizstep:retail_selling`.
      operationId: returnItem
      requestBody:
        description: Information about the items and their new state.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnRequest'
        required: true
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /transaction/v2/return_non_serialized:
    post:
      tags:
        - Transaction API
      summary: Return (non serialized)
      description: Mark item(s) as returned by GTIN. This transaction will be registered as an EPCIS event with bizStep `urn:epcglobal:cbv:bizstep:retail_selling`. Because the request does not contain serialized item references, this transaction will not be processed in realtime stock. Use serialized item references when possible.
      operationId: returnItemNonSerialized
      requestBody:
        description: Information about the items and their new state.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionReturnNonSerializedRequest'
        required: true
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /transaction/v2/sell:
    post:
      tags:
        - Transaction API
      summary: Sell
      description: Mark items as sold. This transaction will be registered as an EPCIS event with bizStep `urn:epcglobal:cbv:bizstep:retail_selling`.
      operationId: sellItem
      requestBody:
        description: Information about the items and their new state.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellRequest'
        required: true
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /transaction/v2/sell_non_serialized:
    post:
      tags:
        - Transaction API
      summary: Sell (non serialized)
      description: Mark item(s) as sold by GTIN. This transaction will be registered as an EPCIS event with bizStep `urn:epcglobal:cbv:bizstep:retail_selling`. Because the request does not contain serialized item references, this transaction will not be processed in realtime stock. Use serialized item references when possible.
      operationId: sellItemNonSerialized
      requestBody:
        description: Information about the items and their new state.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionSellNonSerializedRequest'
        required: true
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /transaction/v2/void_sale:
    post:
      tags:
        - Transaction API
      summary: Void sale
      description: Register a sale that has been voided (cancelled). This transaction will be registered as an EPCIS event with bizStep `http://nedapretail.com/bizstep/void_retail_selling_transaction` or `http://nedapretail.com/bizstep/void_retail_selling_line`.
      operationId: voidSale
      requestBody:
        description: Information about the items and their new state.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoidSaleRequest'
        required: true
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /transaction/v2/void_sale_non_serialized:
    post:
      tags:
        - Transaction API
      summary: Void sale (non serialized)
      description: Register a sale that has been voided (cancelled). This transaction will be registered as an EPCIS event with bizStep `http://nedapretail.com/bizstep/void_retail_selling_transaction` or `http://nedapretail.com/bizstep/void_retail_selling_line`. Because the request does not contain serialized item references, this transaction will not be processed in realtime stock. Use serialized item references when possible.
      operationId: voidSaleNonSerialized
      requestBody:
        description: Information about the items and their new state.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoidSaleNonSerializedRequest'
        required: true
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /webhook/v1/create_or_replace:
    post:
      tags:
        - Webhook API
      summary: Create subscription
      description: Create a webhook subscription.
      operationId: createWebhookSubscription
      requestBody:
        description: A subscription that should be created or replaced.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /webhook/v1/list:
    get:
      tags:
        - Webhook API
      summary: List subscriptions
      description: List active webhook subscriptions.
      operationId: listWebhookSubscriptions
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
      security:
        - bearerAuth: []
  /webhook/v1/retrieve:
    get:
      tags:
        - Webhook API
      summary: Retrieve subscription
      description: Retrieve webhook subscription by id.
      operationId: retrieveWebhookSubscription
      parameters:
        - name: id
          in: query
          description: Identifier of subscription to retrieve.
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: uuid
          example: a0fedec8-b730-11e8-96f8-529269fb1459
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Bad request
        '404':
          description: When subscription could not be found
      security:
        - bearerAuth: []
  /webhook/v1/delete:
    delete:
      tags:
        - Webhook API
      summary: Delete subscription
      description: Delete a webhook subscription.
      operationId: deleteWebhookSubscription
      parameters:
        - name: id
          in: query
          description: Identifier of subscription to be deleted.
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: uuid
          example: a0fedec8-b730-11e8-96f8-529269fb1459
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /webhook/v1/list_deliveries:
    get:
      tags:
        - Webhook API
      summary: List deliveries
      description: Return a list of (summaries of) webhook deliveries. The time of a delivery is the moment the first delivery attempt is done. The returned deliveries are ordered newest to oldest time. Use the from_time and until_time parameters to list deliveries for a specific time frame, use the from_delivery parameter to iterate through all deliveries (set from_delivery to the delivery UUID of the last returned delivery of your previous call). Use the only_failed parameter to only return failed deliveries. A delivery is failed when the maximum number of retries has been reached and the delivery is still unsuccessful. Use the returned delivery ID to retrieve or redeliver the webhook using the relevant endpoint.
      operationId: retrieveWebhookDeliveries
      parameters:
        - name: subscription_id
          in: query
          description: Identifier of subscription to retrieve webhook deliveries for.
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: uuid
          example: a0fedec8-b730-11e8-96f8-529269fb1459
        - name: from_time
          in: query
          description: Retrieve deliveries newer than specified time. Specified time may not be more than 100 days in the past. The time of a delivery is the moment the first delivery attempt is done. This parameter is ignored when from_delivery is specified. If this parameter is not specified, the default is 30 days ago.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: until_time
          in: query
          description: Retrieve deliveries older than specified time. The time of a delivery is the moment the first delivery attempt is done. This parameter is ignored when from_delivery is specified. If this parameter is not specified, the default is the current date/time.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: from_delivery
          in: query
          description: Retrieve deliveries older than or same as from_delivery.
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: uuid
          example: a4bda38f4-b742-11e8-96f8-529269fb1459
        - name: limit
          in: query
          description: Number of deliveries to retrieve (maximum 1000).
          required: false
          style: form
          explode: true
          schema:
            maximum: 1000
            minimum: 1
            type: integer
            default: 50
        - name: only_failed
          in: query
          description: 'Only return failed deliveries. Note: setting this to true could return less deliveries than the number specified in the limit parameter as only the last 1000 deliveries within the specified timeframe are inspected.'
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookDeliverySummary'
        '400':
          description: Bad request
      security:
        - bearerAuth: []
  /webhook/v1/retrieve_delivery:
    get:
      tags:
        - Webhook API
      summary: Retrieve delivery
      description: Retrieve webhook delivery by id.
      operationId: retrieveWebhookDelivery
      parameters:
        - name: subscription_id
          in: query
          description: Identifier of subscription.
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: uuid
          example: a0fedec8-b730-11e8-96f8-529269fb1459
        - name: delivery
          in: query
          description: Identifier of webhook delivery to retrieve.
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: uuid
          example: a4bda38f4-b742-11e8-96f8-529269fb1459
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WebhookDelivery'
        '400':
          description: Bad request
        '404':
          description: When webhook delivery could not be found
      security:
        - bearerAuth: []
  /webhook/v1/redeliver:
    post:
      tags:
        - Webhook API
      summary: Redeliver webhook delivery
      description: Request to redeliver a webhook delivery
      operationId: redeliverWebhookDelivery
      parameters:
        - name: subscription_id
          in: query
          description: Identifier of subscription.
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: uuid
          example: a0fedec8-b730-11e8-96f8-529269fb1459
        - name: delivery
          in: query
          description: Identifier of webhook delivery to redeliver.
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: uuid
          example: a4bda38f4-b742-11e8-96f8-529269fb1459
      responses:
        '204':
          description: Success
        '400':
          description: Bad request
        '404':
          description: When webhook delivery could not be found
      security:
        - bearerAuth: []
components:
  schemas:
    AggregationEvent:
      allOf:
        - $ref: '#/components/schemas/EpcisEvent'
        - type: object
          properties:
            parent_id:
              type: string
              description: The identifier of the parent of the association.
              example: urn:epc:id:sscc:08410580.999999999
            child_epcs:
              type: array
              description: An unordered list of the EPCs of contained objects identified by instance-level identifiers.
              items:
                type: string
            child_quantity_list:
              type: array
              description: An unordered list of one or more QuantityElements identifying (at the class level) contained objects.
              items:
                $ref: '#/components/schemas/QuantityElement'
    ApprovedDifferenceListExportResponse:
      type: object
      properties:
        location:
          type: string
          description: Location identifier of the store the difference list is for.
          example: http://nedapretail.com/loc/store-1
        id:
          type: string
          description: Unique identifier for the approved difference list
          format: uuid
          example: 7ac36dac-49b3-4207-b923-1ca467e96e88
        gtins:
          type: array
          description: List of GTINs in the exported approved difference list.
          items:
            type: string
        articles:
          type: array
          description: Article details like name, size, etc., corresponding to the GTIN in the GTIN list.
          items:
            $ref: '#/components/schemas/Article'
        approved_on:
          type: string
          description: Date and time when this difference list was approved.
          format: date-time
        approved_by:
          type: string
          description: Person that approved the difference list.
          example: John Doe
        erp_stock_id:
          type: string
          description: The identifier of the ERP stock that was used in this approved difference list.
          example: e8a2a3b8-ea3d-4ab6-857b-db1ae25de2e9
        erp_stock_time:
          type: string
          description: The date and time of the ERP stock that was used in this approved difference list.
          format: date-time
        erp_quantity:
          type: integer
          description: Total number of ERP stock items in this approved difference list. Can be less than the item quantity of the ERP stock because of filters in the difference list.
          format: int32
          example: 5263
        erp_gtin_quantity:
          type: integer
          description: Total number of ERP stock GTINs in this approved difference list. Can be less than the GTIN quantity of the ERP stock because of filters in the difference list.
          format: int32
          example: 1982
        rfid_stock_time:
          type: string
          description: The date and time of the RFID count that was used in this approved difference list.
          format: date-time
        rfid_quantity:
          type: integer
          description: Total number of items counted with RFID in this approved difference list. Can be less than the item quantity of the RFID count because of filters in the difference list.
          format: int32
          example: 5134
        rfid_gtin_quantity:
          type: integer
          description: Total number of GTINs counted with RFID in this approved difference list. Can be less than the GTIN quantity of the RFID count because of filters in the difference list.
          format: int32
          example: 1924
        is_partial_count:
          type: boolean
          description: When set to true, the RFID count was a partial count.
          default: false
        absolute_difference:
          type: integer
          description: Absolute difference in items between the RFID count and ERP stock.
          format: int32
          example: -44
        plus_difference:
          type: integer
          description: Positive difference in items between the RFID count and ERP stock.
          format: int32
          example: 12
        minus_difference:
          type: integer
          description: Negative difference in items between the RFID count and ERP stock.
          format: int32
          example: 56
        export_status:
          type: string
          description: 'Transfer status of this approved difference list towards the ERP system. Values: NOT_EXPORTED, EXPORTED or ERROR'
          example: EXPORTED
        export_time:
          type: string
          description: Date and time when this approved difference list was exported.
          format: date-time
        extern_ref:
          type: string
          description: The extern_ref field of the ERP stock used for this approved difference list.
          example: export_monday_store-1
        accuracy:
          type: number
          description: Accuracy relation between the ERP stock and RFID stock, according to the SMAPE definition.
          format: double
          example: 98.3
        ignored_gtin_quantity:
          type: integer
          description: Number of GTINs that are ignored (not approved)
          format: int32
        ignored_quantity:
          type: integer
          description: Number of items that are ignored (not approved)
          format: int32
        difference_value:
          $ref: '#/components/schemas/DifferenceValue'
        grouping_by:
          type: string
          description: (Optional) Specifies how the articles are grouped. By default the erp_quantity and rfid_quantity fields in gtin_differences contains the quantity per GTIN. If grouping_by has value code, then erp_quantity and rfid_quantity fields contains quantity per article-code. If the article master database contains 2 or more articles with identical article-code (but of course different GTIN), than only 1 GTIN will be randomly chosen from the set.
        remarks:
          type: string
          description: (Optional) Remarks field
        approved_quantity:
          type: array
          description: Quantity of approved GTINs in the exported approved difference list.
          items:
            type: integer
            format: int32
    ApprovedDifferenceListResponse:
      type: object
      properties:
        location:
          type: string
          description: Location identifier of the store the difference list is for.
          example: http://nedapretail.com/loc/store-1
        id:
          type: string
          description: Unique identifier for the approved difference list
          format: uuid
          example: 7ac36dac-49b3-4207-b923-1ca467e96e88
        gtins:
          type: array
          description: List of GTINs in the approved difference list.
          items:
            type: string
        articles:
          type: array
          description: Article details like name, size, etc., corresponding to the GTIN in the GTIN list.
          items:
            $ref: '#/components/schemas/Article'
        approved:
          type: array
          description: Approved status, corresponding to the GTIN in the GTIN list.
          items:
            type: boolean
        approved_on:
          type: string
          description: Date and time when this difference list was approved.
          format: date-time
        approved_by:
          type: string
          description: Person that approved the difference list.
          example: John Doe
        erp_stock_id:
          type: string
          description: The identifier of the ERP stock that was used in this approved difference list.
          example: e8a2a3b8-ea3d-4ab6-857b-db1ae25de2e9
        erp_stock_time:
          type: string
          description: The date and time of the ERP stock that was used in this approved difference list.
          format: date-time
        erp_quantity:
          type: integer
          description: Total number of ERP stock items in this approved difference list. Can be less than the item quantity of the ERP stock because of filters in the difference list.
          format: int32
          example: 5263
        erp_gtin_quantity:
          type: integer
          description: Total number of ERP stock GTINs in this approved difference list. Can be less than the GTIN quantity of the ERP stock because of filters in the difference list.
          format: int32
          example: 1982
        received_shipment_ids:
          type: array
          description: Contains all identifiers (parent-ids) of received shipments between the event time of the ERP stock and the event time of the RFID count.
          items:
            type: string
        received_quantity:
          type: integer
          description: Quantity of items in the received shipments that was used in this approved difference list.
          format: int32
          example: 104
        received_gtin_quantity:
          type: integer
          description: Quantity of GTINs in the received shipments that was used in this approved difference list.
          format: int32
          example: 85
        rfid_stock_time:
          type: string
          description: The date and time of the RFID count that was used in this approved difference list.
          format: date-time
        rfid_quantity:
          type: integer
          description: Total number of items counted with RFID in this approved difference list. Can be less than the item quantity of the RFID count because of filters in the difference list.
          format: int32
          example: 5134
        rfid_gtin_quantity:
          type: integer
          description: Total number of GTINs counted with RFID in this approved difference list. Can be less than the GTIN quantity of the RFID count because of filters in the difference list.
          format: int32
          example: 1924
        is_partial_count:
          type: boolean
          description: When set to true, the RFID count was a partial count.
          default: false
        absolute_difference:
          type: integer
          description: Absolute difference in items between counted (RFID count) and expected (ERP stock + received quantities).
          format: int32
          example: -44
        plus_difference:
          type: integer
          description: Positive difference in items between counted (RFID count) and expected (ERP stock + received quantities).
          format: int32
          example: 12
        minus_difference:
          type: integer
          description: Negative difference in items between counted (RFID count) and expected (ERP stock + received quantities).
          format: int32
          example: 56
        export_status:
          type: string
          description: 'Transfer status of this approved difference list towards the ERP system. Values: NOT_EXPORTED, EXPORTED or ERROR'
          example: EXPORTED
        export_time:
          type: string
          description: Date and time when this approved difference list was exported.
          format: date-time
        extern_ref:
          type: string
          description: The extern_ref field of the ERP stock used for this approved difference list.
          example: export_monday_store-1
        accuracy:
          type: number
          description: Accuracy relation between the expected (ERP stock and received quantities) and counted (RFID count quantities), according to the SMAPE definition.
          format: double
          example: 98.3
        ignored_gtin_quantity:
          type: integer
          description: Number of GTINs that are ignored (not approved)
          format: int32
        ignored_quantity:
          type: integer
          description: Number of items that are ignored (not approved)
          format: int32
        difference_value:
          $ref: '#/components/schemas/DifferenceValue'
        grouping_by:
          type: string
          description: (Optional) Specifies how the articles are grouped. By default the erp_quantity, received_quantity and rfid_quantity fields in gtin_differences contains the quantity per GTIN. If group_by has value code, then erp_quantity, received_quantity and rfid_quantity fields contains quantity per article-code. If the article master database contains 2 or more articles with identical article-code (but of course different GTIN), than only 1 GTIN will be randomly chosen from the set.
        remarks:
          type: string
          description: (Optional) Remarks field
        erp_stock:
          type: array
          description: ERP stock quantity, corresponding to the GTIN in the GTIN list.
          items:
            type: integer
            format: int32
        received_shipments:
          type: array
          description: Received shipment quantity, corresponding to the GTIN in the GTIN list.
          items:
            type: integer
            format: int32
        rfid_stock:
          type: array
          description: RFID count quantity, corresponding to the GTIN in the GTIN list.
          items:
            type: integer
            format: int32
    ApprovedDifferenceListSummary:
      type: object
      properties:
        location:
          type: string
          description: Location identifier of the store the difference list is for.
          example: http://nedapretail.com/loc/store-1
        id:
          type: string
          description: Unique identifier for the approved difference list
          format: uuid
          example: 7ac36dac-49b3-4207-b923-1ca467e96e88
        approved_on:
          type: string
          description: Date and time when this difference list was approved.
          format: date-time
        approved_by:
          type: string
          description: Person that approved the difference list.
          example: John Doe
        erp_stock_id:
          type: string
          description: The identifier of the ERP stock that was used in this approved difference list.
          example: e8a2a3b8-ea3d-4ab6-857b-db1ae25de2e9
        erp_stock_time:
          type: string
          description: The date and time of the ERP stock that was used in this approved difference list.
          format: date-time
        erp_quantity:
          type: integer
          description: Quantity of items in the ERP stock that was used in this approved difference list.
          format: int32
          example: 5263
        erp_gtin_quantity:
          type: integer
          description: Quantity of GTINs in the ERP stock that was used in this approved difference list.
          format: int32
          example: 1982
        received_shipment_ids:
          type: array
          description: Contains all identifiers (parent-ids) of received shipments between the event time of the ERP stock and the event time of the RFID count.
          items:
            type: string
        received_quantity:
          type: integer
          description: Quantity of items in the received shipments that was used in this approved difference list.
          format: int32
          example: 104
        received_gtin_quantity:
          type: integer
          description: Quantity of GTINs in the received shipments that was used in this approved difference list.
          format: int32
          example: 85
        rfid_stock_time:
          type: string
          description: The date and time of the RFID count that was used in this approved difference list.
          format: date-time
        rfid_quantity:
          type: integer
          description: Quantity of items in the RFID count that was used in this approved difference list.
          format: int32
          example: 5134
        rfid_gtin_quantity:
          type: integer
          description: Quantity of GTINs in the RFID count that was used in this approved difference list.
          format: int32
          example: 1924
        is_partial_count:
          type: boolean
          description: When set to true, the RFID count was a partial count.
          default: false
        absolute_difference:
          type: integer
          description: Absolute difference in items between counted (RFID count) and expected (ERP stock + received quantities).
          format: int32
          example: -44
        plus_difference:
          type: integer
          description: Positive difference in items between counted (RFID count) and expected (ERP stock + received quantities).
          format: int32
          example: 12
        minus_difference:
          type: integer
          description: Negative difference in items between counted (RFID count) and expected (ERP stock + received quantities).
          format: int32
          example: 56
        export_status:
          type: string
          description: 'Transfer status of this approved difference list towards the ERP system. Values: NOT_EXPORTED, EXPORTED or ERROR'
          example: EXPORTED
        export_time:
          type: string
          description: Date and time when this approved difference list was exported.
          format: date-time
        extern_ref:
          type: string
          description: The extern_ref field of the ERP stock used for this approved difference list.
          example: export_monday_store-1
        accuracy:
          type: number
          description: Accuracy relation between the expected (ERP stock and received quantities) and counted (RFID count quantities), according to the SMAPE definition.
          format: double
          example: 98.3
        ignored_gtin_quantity:
          type: integer
          description: Number of GTINs that are ignored (not approved)
          format: int32
        ignored_quantity:
          type: integer
          description: Number of items that are ignored (not approved)
          format: int32
        difference_value:
          $ref: '#/components/schemas/DifferenceValue'
        grouping_by:
          type: string
          description: (Optional) Specifies how the articles are grouped. By default the erp_quantity, received_quantity and rfid_quantity fields in gtin_differences contains the quantity per GTIN. If group_by has value code, then erp_quantity, received_quantity and rfid_quantity fields contains quantity per article-code. If the article master database contains 2 or more articles with identical article-code (but of course different GTIN), than only 1 GTIN will be randomly chosen from the set.
        remarks:
          type: string
          description: (Optional) Remarks field
    ApprovedDifferenceListExportStatusUpdateRequest:
      required:
        - export_status
        - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the approved difference list
          format: uuid
          example: 7ac36dac-49b3-4207-b923-1ca467e96e88
        export_status:
          type: string
          description: 'Transfer status of this approved difference list towards the ERP system. Values: NOT_EXPORTED, EXPORTED or ERROR'
          example: EXPORTED
          enum:
            - NOT_EXPORTED
            - EXPORTED
            - ERROR
    Article:
      required:
        - barcodes
        - name
      type: object
      properties:
        gtin:
          maxLength: 14
          pattern: ^\d{14}$
          type: string
          description: GTIN-14, length of 14 digits. Primary key to identify an article (or SKU). GTIN-14 value is validated against the GS1 standard. When no GTIN-14 is provided, it will be generated and unique for this organization.
          example: '02123456789126'
        barcodes:
          maxItems: 195
          type: array
          description: Contains all barcodes for this article, for example EAN-13 and UPC-12. Minimum of 1 linear barcode is required.
          items:
            $ref: '#/components/schemas/Barcode'
        code:
          maxLength: 255
          type: string
          description: Article code as assigned by the retailer. No relation to GTIN or other barcodes is assumed.
          example: AB123456
        brand:
          maxLength: 255
          type: string
          description: The brand of the product.
          example: Miss Fashion
        season:
          maxLength: 255
          type: string
          description: The season the product belongs to.
          example: Fall 2023
        name:
          maxLength: 255
          type: string
          description: Name of the article.
          example: Shirt Awesome
        option:
          maxLength: 255
          type: string
          description: 'Description of the option. The field option_code is used to group articles, refer to options, etc. while this field is shown in user interfaces to describe an option. When omitted: option is automatically filled with the value of the name and color fields.'
          example: Shirt Awesome, Blue
        style:
          maxLength: 255
          type: string
          description: 'Name of the article, independent of color. When omitted: style is automatically filled with name.'
          example: Shirt Awesome
        color:
          maxLength: 255
          type: string
          description: Contains color description.
          example: Blue
        sizes:
          maxItems: 195
          type: array
          description: Contains region dependent size descriptions.
          items:
            $ref: '#/components/schemas/Size'
        supplier:
          maxLength: 255
          type: string
          description: Supplier name. Can also be factory name.
          example: Supplier Factory
        category:
          maxLength: 255
          type: string
          description: Category name. Used to group articles (or SKU's) in the web interface and the apps
          example: Shirts
        department:
          maxLength: 255
          type: string
          description: Department. Used for grouping multiple categories.
          example: Youth
        prices:
          maxItems: 195
          type: array
          description: Contains various prices that can be country specific.
          items:
            $ref: '#/components/schemas/Price'
        gender:
          maxLength: 255
          type: string
          description: Contains the gender. This is free format, but is intended to contain e.g. Male.
          example: Male, Female, Unisex
        sku_code:
          maxLength: 255
          type: string
          description: 'Stock Keeping Unit code. When omitted: sku_code is automatically filled with "GTIN-" plus value of gtin field.'
          example: '212345678912'
        option_code:
          maxLength: 255
          type: string
          description: 'Option code of the article. All articles within the same option_code should only differ in size. This field is used to refer to an option in APIs and group relevant articles. The option field is used to refer to an option in user interfaces, the option_code field is not shown in user interfaces. When omitted: option_code is automatically filled with the value of the option field.'
          example: '712'
        age_group:
          maxLength: 255
          type: string
          description: Contains the age group. This is free format, but is intended to contain e.g. Child.
          example: Child, Youth, Adult, Senior
        refill_category:
          maxLength: 255
          type: string
          description: The category used as a key for the refill feature. When omitted category, age group, and gender will be used by default for refill.
          example: Jeans, Men, M
        image_url:
          maxLength: 255
          type: string
          description: A valid url containing an image. The image should be in JPEG, GIF or PNG format and not too large (maximum 250 kB).
          example: http://www.example.org/image.jpg
        last_updated:
          type: string
          description: The time when the article was last updated. This field will be overwritten when new article data is uploaded.
          format: date-time
        rfid_tagged:
          type: string
          description: Indicates how this article is tagged.
          example: AT_SOURCE
          enum:
            - 'NO'
            - AT_SOURCE
            - MANUAL
        custom_label_field1:
          maxLength: 255
          type: string
          description: Field used for printing customized RFID labels.
        custom_label_field2:
          maxLength: 255
          type: string
          description: Field used for printing customized RFID labels.
        custom_label_field3:
          maxLength: 255
          type: string
          description: Field used for printing customized RFID labels.
        fabric:
          maxLength: 255
          type: string
          description: Description of the fabric the article is made of.
          example: Wool
        gs1_company_prefix_length:
          maximum: 12
          minimum: 6
          type: integer
          description: GS1 Company Prefix Length that is used to program RFID labels for this GTIN. If omitted, this field will be filled with the value published by GS1 in the GS1 Company Prefix (GCP) Length Table. If the GS1 Company Prefix of this GTIN is not in the list, a default value of 7 will be used.
          nullable: true
    Barcode:
      type: object
      properties:
        type:
          maxLength: 10
          type: string
          description: Barcode type. Typically ean_13 or upc_12. Values are described in lowercase, digits and underscores. Values can include ean_8, ean_13, upc_12, gs1_128, code_39.
          example: ean_13
        value:
          maxLength: 255
          type: string
          description: Value of barcode.
          example: '2123456789126'
    BizTransactionElement:
      required:
        - biz_transaction
      type: object
      properties:
        type:
          type: string
          description: An identifier that indicates what kind of business transaction this BusinessTransaction denotes.
          example: urn:epcglobal:cbv:btt:po
        biz_transaction:
          type: string
          description: An identifier that denotes a specific business transaction.
          example: http://transaction.acme.com/po/12345678
    CreateOrReplaceRefillTargetsRequest:
      required:
        - item_type
        - location
        - targets
      type: object
      properties:
        location:
          maxLength: 255
          minLength: 1
          type: string
          description: Location identifier of the store.
          example: http://nedapretail.com/loc/store-1
        expiration_date:
          type: string
          description: Time at which the target is no longer valid. At that time, the targets will be removed for the store. The expiration_date can not be larger than 6 months from now and also defaults to 6 months.
          format: date-time
        item_type:
          type: string
          description: Specifies which article reference is being used.
          enum:
            - gtin
            - sku_code
        targets:
          maxItems: 100000
          type: array
          description: List of Size Targets.
          items:
            $ref: '#/components/schemas/RefillTarget'
    DestinationElement:
      required:
        - destination
        - type
      type: object
      properties:
        type:
          maxLength: 255
          type: string
          description: An identifier that indicates what kind of destination this Destination denotes.
          example: urn:epcglobal:cbv:sdt:owning_party
        destination:
          maxLength: 255
          type: string
          description: An identifier that denotes a specific destination.
          example: urn:epc:id:sgln:0614141.00001.0
    DifferenceListByCategoryResponse:
      type: object
      properties:
        categories:
          type: array
          description: List of categories, corresponding to the GTIN in the GTIN list.
          items:
            $ref: '#/components/schemas/DifferenceListCategory'
        accuracy:
          type: number
          description: Accuracy relation between the expected (ERP stock and received shipments) and counted, according to the SMAPE definition.
          format: double
          example: 98.3
        erp_stock_time:
          type: string
          description: Date and time of the ERP stock creation.
          format: date-time
        received_shipment_ids:
          type: array
          description: Contains all identifiers (parent-ids) of received shipments between the event time of the ERP stock and the event time of the RFID count.
          items:
            type: string
        rfid_stock_time:
          type: string
          description: Date and time of the RFID count creation.
          format: date-time
        erp_gtin_quantity:
          type: integer
          description: Total number of ERP stock GTINs in this difference list. Can be less than the GTIN quantity of the ERP stock because of filters in the difference list.
          format: int32
          example: 6272
        erp_quantity:
          type: integer
          description: Total number of ERP stock items in this difference list. Can be less than the item quantity of the ERP stock because of filters in the difference list.
          format: int32
          example: 5263
        received_shipments_gtin_quantity:
          type: integer
          description: Total number of received shipment GTINs in this difference list. Can be less than the GTIN quantity of actual received shipments because of filters in the difference list.
          format: int32
          example: 85
        received_shipments_quantity:
          type: integer
          description: Total number of received shipment items in this difference list. Can be less than the item quantity of actual received shipments because of filters in the difference list.
          format: int32
          example: 104
        rfid_gtin_quantity:
          type: integer
          description: Total number of GTINs counted with RFID in this difference list. Can be less than the GTIN quantity of the RFID count because of filters in the difference list.
          format: int32
          example: 6132
        rfid_quantity:
          type: integer
          description: Total number of items counted with RFID in this difference list. Can be less than the item quantity of the RFID count because of filters in the difference list.
          format: int32
          example: 5134
        grouping_by:
          type: string
          description: (Optional) Specifies how the articles are grouped. By default the erp_stock, received_shipments and rfid_stock fields contains the quantity per GTIN. If group_by has value code, then erp_stock, received_shipments and rfid_stock fields contains quantity per article-code. If the article master database contains 2 or more articles with identical article-code (but of course different GTIN), than only 1 GTIN will be randomly chosen from the set.
        is_partial_count:
          type: boolean
          description: When set to true, the RFID count was a partial count.
          default: false
        difference_value:
          $ref: '#/components/schemas/DifferenceValue'
    DifferenceListCategory:
      type: object
      properties:
        gtins:
          type: array
          description: List of GTINs in the difference list for this category.
          items:
            type: string
        articles:
          type: array
          description: Article details like name, size, etc., corresponding to the GTIN in the GTIN list.
          items:
            $ref: '#/components/schemas/Article'
        category:
          type: string
          description: Category name.
        erp_stock:
          type: array
          description: ERP stock quantity, corresponding to the GTIN in the GTIN list.
          items:
            type: integer
            format: int32
        received_shipments:
          type: array
          description: Received shipment quantity, corresponding to the GTIN in the GTIN list.
          items:
            type: integer
            format: int32
        rfid_stock:
          type: array
          description: RFID count quantity, corresponding to the GTIN in the GTIN list.
          items:
            type: integer
            format: int32
        accuracy:
          type: number
          description: Accuracy relation between the expected (ERP stock and received shipments) and counted, according to the SMAPE definition.
          format: double
          example: 98.3
    DifferenceListResponse:
      type: object
      properties:
        gtins:
          type: array
          description: List of GTINs in the difference list.
          items:
            type: string
        articles:
          type: array
          description: Article details like name, size, etc., corresponding to the GTIN in the GTIN list.
          items:
            $ref: '#/components/schemas/Article'
        location:
          type: string
          description: Location identifier of the store the difference list is for.
          example: http://nedapretail.com/loc/store-1
        erp_stock:
          type: array
          description: ERP stock quantity, corresponding to the GTIN in the GTIN list.
          items:
            type: integer
            format: int32
        received_shipments:
          type: array
          description: Received shipment quantity, corresponding to the GTIN in the GTIN list.
          items:
            type: integer
            format: int32
        rfid_stock:
          type: array
          description: RFID count quantity, corresponding to the GTIN in the GTIN list.
          items:
            type: integer
            format: int32
        erp_stock_time:
          type: string
          description: Date and time of the ERP stock creation.
          format: date-time
        received_shipment_ids:
          type: array
          description: Contains all identifiers (parent-ids) of received shipments between the event time of the ERP stock and the event time of the RFID count.
          items:
            type: string
        rfid_stock_time:
          type: string
          description: Date and time of the RFID count creation.
          format: date-time
        erp_gtin_quantity:
          type: integer
          description: Total number of ERP stock GTINs in this difference list. Can be less than the GTIN quantity of the ERP stock because of filters in the difference list.
          format: int32
          example: 6272
        erp_quantity:
          type: integer
          description: Total number of ERP stock items in this difference list. Can be less than the item quantity of the ERP stock because of filters in the difference list.
          format: int32
          example: 5263
        received_shipments_gtin_quantity:
          type: integer
          description: Total number of received shipment GTINs in this difference list. Can be less than the GTIN quantity of actual received shipments because of filters in the difference list.
          format: int32
          example: 85
        received_shipments_quantity:
          type: integer
          description: Total number of received shipment items in this difference list. Can be less than the item quantity of actual received shipments because of filters in the difference list.
          format: int32
          example: 104
        rfid_gtin_quantity:
          type: integer
          description: Total number of GTINs counted with RFID in this difference list. Can be less than the GTIN quantity of the RFID count because of filters in the difference list.
          format: int32
          example: 6132
        rfid_quantity:
          type: integer
          description: Total number of items counted with RFID in this difference list. Can be less than the item quantity of the RFID count because of filters in the difference list.
          format: int32
          example: 5134
        accuracy:
          type: number
          description: Accuracy relation between the expected (ERP stock and received shipment) and counted, according to the SMAPE definition.
          format: double
          example: 98.3
        grouping_by:
          type: string
          description: (Optional) Specifies how the articles are grouped. By default the erp_stock, received_shipments and rfid_stock fields contains the quantity per GTIN. If group_by has value code, then erp_stock, received_shipments and rfid_stock fields contains quantity per article-code. If the article master database contains 2 or more articles with identical article-code (but of course different GTIN), than only 1 GTIN will be randomly chosen from the set.
        is_partial_count:
          type: boolean
          description: When set to true, the RFID count was a partial count.
          default: false
        difference_value:
          $ref: '#/components/schemas/DifferenceValue'
    DifferenceValue:
      type: object
      properties:
        amount:
          type: number
          description: Total monetary value of all differences (can be negative)
          format: double
          example: 920.5
        currency:
          type: string
          description: Currency of the difference value (ISO 4217 currency code)
          example: EUR
        region:
          type: string
          description: Region of the difference value ("EU", "World", or an ISO3166-1 country code)
          example: EU
    EpcisEvent:
      required:
        - action
        - event_time
        - event_time_zone_offset
        - id
        - type
      type: object
      properties:
        id:
          maxLength: 255
          type: string
          description: EPCIS event message identifier, assigned by the creator of the event. This identifier must be unique within the organization.
          example: 43abaed0-5d11-4b78-83e0-f49caa777b94
        type:
          type: string
          description: Type of EPCIS event.
          example: object_event
          enum:
            - object_event
            - aggregation_event
            - transaction_event
            - transformation_event
        action:
          type: string
          description: The action field describes the event’s relationship to the lifecycle of the object, aggregation, transaction or transformation.
          example: ADD
          enum:
            - ADD
            - OBSERVE
            - DELETE
        disposition:
          maxLength: 255
          type: string
          description: The business condition of the objects associated with the EPCs, presumed to hold true until contradicted by a subsequent event.
          example: urn:epcglobal:cbv:disp:in_transit
        stored_id:
          type: string
          description: Identifier for the event, automatically assigned when the event is stored in the database.
          format: uuid
          example: 138a02fd-a7d2-47bf-81fe-1861dc97fea1
        event_id:
          maxLength: 255
          type: string
          description: |
            An identifier for this event as specified by the capturing application, globally unique across all events other than error declarations.
          example: b6f3738d-ec80-4fa6-92e6-b20cfcc99af7
        event_time:
          type: string
          description: The date and time at which the EPCIS Capturing Applications asserts the event occurred.
          format: date-time
        record_time:
          type: string
          description: The date and time at which this event was recorded by an EPCIS Repository.
          format: date-time
        event_time_zone_offset:
          maxLength: 6
          type: string
          description: The time zone offset in effect at the time and place the event occurred, expressed as an offset from UTC.
          example: '+01:00'
        biz_step:
          maxLength: 255
          type: string
          description: The business step of which this event was a part.
          example: urn:epcglobal:cbv:bizstep:shipping
        biz_location:
          maxLength: 255
          type: string
          description: The business location where the objects associated with the containing and contained EPCs may be found, until contradicted by a subsequent event.
          example: urn:epc:id:sgln:0012345.11111.0
        read_point:
          maxLength: 255
          type: string
          description: The read point at which the event took place.
          example: urn:epc:id:sgln:0012345.11111.400
        source_list:
          maxItems: 10000
          type: array
          description: An unordered list of Source elements that provide context about the originating endpoint of a business transfer of which this event is a part.
          items:
            $ref: '#/components/schemas/SourceElement'
        destination_list:
          maxItems: 10000
          type: array
          description: An unordered list of Destination elements that provide context about the terminating endpoint of a business transfer of which this event is a part.
          items:
            $ref: '#/components/schemas/DestinationElement'
        biz_transaction_list:
          maxItems: 10000
          type: array
          description: An unordered list of business transactions that define the context of this event.
          items:
            $ref: '#/components/schemas/BizTransactionElement'
        error_declaration:
          type: object
          $ref: '#/components/schemas/ErrorDeclaration'
      discriminator:
        propertyName: type
        mapping:
          object_event: '#/components/schemas/ObjectEvent'
          aggregation_event: '#/components/schemas/AggregationEvent'
          transaction_event: '#/components/schemas/TransactionEvent'
          transformation_event: '#/components/schemas/TransformationEvent'
    ErpGtinQuantity:
      required:
        - gtin
        - quantity
      type: object
      properties:
        gtin:
          maxLength: 14
          pattern: ^\d{14}$
          type: string
          description: The GTIN for which the quantity is specified.
        quantity:
          type: integer
          description: A number that specifies how many or how much of the specified GTIN is denoted by this GtinQuantity. Negative values are allowed.
          format: int32
        exclude:
          type: boolean
          description: When set to true, the GTIN is excluded from the expected stock and the difference list. Default value is set to false.
          default: false
      description: A GtinQuantity is a structure that identifies GTIN plus quantity.
    ErpStock:
      type: object
      properties:
        id:
          type: string
          description: Identifier of the ERP stock.
          example: 2f60bac5-c4d7-4ca7-b666-79bdf9b780b7
        location:
          type: string
          description: Location identifier of the store that the ERP stock belongs to.
          example: http://nedapretail.com/loc/store-1
        event_time:
          type: string
          description: The time the ERP stock was exported from the ERP system.
          format: date-time
        extern_ref:
          type: string
          description: A reference for the ERP stock as defined by (for example) the ERP system. This reference is also included in a difference list.
          example: export_monday_store-1
        status:
          type: string
          description: (deprecated) Value is always ACCEPTED.
          example: ACCEPTED
          deprecated: true
          enum:
            - ACCEPTED
            - VALIDATING
        quantity:
          type: integer
          description: Total quantity of items in the ERP stock.
          format: int32
          example: 6253
        excluded_quantity:
          type: integer
          description: Total quantity of excluded items in the ERP stock.
          format: int32
          example: 124
        gtin_quantity:
          type: integer
          description: Total quantity of GTINs in the ERP stock.
          format: int32
          example: 1542
        excluded_gtin_quantity:
          type: integer
          description: Total quantity of excluded GTINs in the ERP stock.
          format: int32
          example: 65
        in_use:
          type: boolean
          description: Indicates whether the ERP stock is used in a difference list. If it is used, the ERP stock can not be deleted anymore.
          example: false
          default: false
        grouping_by:
          type: string
          description: (Optional) Specifies how the articles are grouped. By default the quantity field in quantity_list contains the quantity per GTIN. If group_by has value code, then quantity field contains quantity per article-code. If the article master database contains 2 or more articles with identical article-code (but of course different GTIN), than only 1 GTIN will be randomly chosen from the set.
        quantity_list:
          type: array
          description: List of GtinQuantity objects; specifying GTIN and the quantity and if the GTIN should be excluded from the expected stock and difference list.
          items:
            $ref: '#/components/schemas/ErpGtinQuantity'
      description: An ERP stock is a snapshot of the stock levels of a store according to the ERP system.
    ErpStockCreateRequest:
      required:
        - event_time
        - location
        - quantity_list
      type: object
      properties:
        location:
          maxLength: 255
          type: string
          description: Location identifier of the store that the ERP stock belongs to.
          example: http://nedapretail.com/loc/store-1
        event_time:
          type: string
          description: The time the ERP stock was exported from the ERP system.
          format: date-time
        extern_ref:
          maxLength: 255
          type: string
          description: A reference for the ERP stock as defined by (for example) the ERP system. This reference is also included in a difference list.
          example: export_monday_store-1
        grouping_by:
          maxLength: 255
          type: string
          description: (Optional) Specifies how the articles are grouped. By default the quantity field in quantity_list contains the quantity per GTIN. If group_by has value code, then quantity field contains quantity per article-code. If the article master database contains 2 or more articles with identical article-code (but of course different GTIN), than only 1 GTIN will be randomly chosen from the set.
        quantity_list:
          maxItems: 10000
          type: array
          description: List of GtinQuantity objects; specifying GTIN and the quantity and if the GTIN should be excluded from the expected stock and difference list.
          items:
            $ref: '#/components/schemas/ErpGtinQuantity'
      description: An ERP stock is a snapshot of the stock levels of a store according to the ERP system.
    ErpStockCreateResponse:
      type: object
      properties:
        id:
          type: string
          description: Identifier of the created ERP stock.
          example: 2f60bac5-c4d7-4ca7-b666-79bdf9b780b7
    ErpStockSummary:
      type: object
      properties:
        id:
          type: string
          description: Identifier of the ERP stock.
          example: 2f60bac5-c4d7-4ca7-b666-79bdf9b780b7
        location:
          type: string
          description: Location identifier of the store that the ERP stock belongs to.
          example: http://nedapretail.com/loc/store-1
        event_time:
          type: string
          description: The time the ERP stock was exported from the ERP system.
          format: date-time
        extern_ref:
          type: string
          description: An external reference for the ERP stock, defined by the 3rd party integrator.
          example: export_monday_store-1
        status:
          type: string
          description: (deprecated) Value is always ACCEPTED.
          example: ACCEPTED
          deprecated: true
          enum:
            - ACCEPTED
            - VALIDATING
        quantity:
          type: integer
          description: Total quantity of items in the ERP stock.
          format: int32
          example: 6253
        excluded_quantity:
          type: integer
          description: Total quantity of excluded items in the ERP stock.
          format: int32
          example: 124
        gtin_quantity:
          type: integer
          description: Total quantity of GTINs in the ERP stock.
          format: int32
          example: 1542
        excluded_gtin_quantity:
          type: integer
          description: Total quantity of excluded GTINs in the ERP stock.
          format: int32
          example: 65
        in_use:
          type: boolean
          description: Indicates whether the ERP stock is used in a difference list. If it is used, the ERP stock can not be deleted anymore.
          example: false
          default: false
        grouping_by:
          type: string
          description: (Optional) Specifies how the articles are grouped. By default the quantity field in quantity_list contains the quantity per GTIN. If group_by has value code, then quantity field contains quantity per article-code. If the article master database contains 2 or more articles with identical article-code (but of course different GTIN), than only 1 GTIN will be randomly chosen from the set.
      description: Provides summary information about an ERP stock.
    ErrorDeclaration:
      required:
        - declaration_time
      type: object
      properties:
        declaration_time:
          type: string
          description: The date and time at which the declaration of error is made.
          format: date-time
        reason:
          maxLength: 255
          type: string
          description: An element from a standard vocabulary that specifies the reason the prior event is considered erroneous.
          example: urn:epcglobal:cbv:er:incorrect_data
        corrective_event_ids:
          maxItems: 10000
          type: array
          description: If present, indicates that the events having the specified URIs as the value of their eventID fields are to be considered as "corrections" to the event declared erroneous by this event.
          items:
            maxLength: 255
            type: string
      description: A ErrorDeclaration is a structure that identifies a prior EPCISEvent is in error.
    GtinQuantity:
      required:
        - gtin
        - quantity
      type: object
      properties:
        gtin:
          maxLength: 14
          pattern: ^\d{14}$
          type: string
          description: The GTIN for which the quantity is specified.
        quantity:
          type: integer
          description: A number that specifies how many or how much of the specified GTIN is denoted by this GtinQuantity. Negative values are allowed.
          format: int32
      description: A GtinQuantity is a structure that identifies GTIN plus quantity.
    ObjectEvent:
      allOf:
        - $ref: '#/components/schemas/EpcisEvent'
        - type: object
          properties:
            ilmd:
              type: string
              description: Instance/Lot master data (Section 7.3.6) that describes the objects created during this event.
            epc_list:
              type: array
              description: An unordered list of one or more EPCs naming specific objects to which the event  pertained.
              items:
                type: string
            quantity_list:
              type: array
              description: An unordered list of one or more QuantityElements identifying (at the class level) objects to which the event pertained.
              items:
                $ref: '#/components/schemas/QuantityElement'
    PartialCountFilter:
      type: object
      properties:
        filter_type:
          type: string
          description: Type of filter that was applied ("none" in case no filter was applied).
          example: none
        filter_hash:
          type: string
          description: Hash value of the filter type and payload.
          example: 71f8e7976e4cbc4561c9d62fb283e7f788202acb
    PartialCountFilterNone:
      allOf:
        - $ref: '#/components/schemas/PartialCountFilter'
        - type: object
          properties:
            filter_payload:
              type: object
              description: 'When filter_type is "none": empty object.'
    PartialCountFilterArticleV1:
      allOf:
        - $ref: '#/components/schemas/PartialCountFilter'
        - type: object
          properties:
            filter_payload:
              type: object
              additionalProperties:
                type: array
                description: List of allowed values for this article property.
                items:
                  type: string
              description: 'When filter_type is "article.v1": List of article properties and selected values. Multiple properties are combined using AND, multiple values are combined using OR.'
    PartialCountFilterSublocationV1:
      allOf:
        - $ref: '#/components/schemas/PartialCountFilter'
        - type: object
          properties:
            filter_payload:
              type: object
              properties:
                location_ids:
                  type: array
                  description: List of location identifiers of sublocations where the count took place.
                  items:
                    type: string
              description: 'When filter_type is "sublocation.v1": list of location identifiers of sublocations where the count took place.'
    Price:
      type: object
      properties:
        currency:
          maxLength: 255
          type: string
          description: The currency for the specified region (ISO 4217 currency code).
          example: EUR
        region:
          maxLength: 15
          type: string
          description: The country defining the region where this price is used ("EU", "World" or an ISO 3166-1 alpha-2 two letter country code).
          example: NL
        amount:
          type: number
          description: Amount of monetary value.
          format: double
          example: 11.95
        type:
          type: string
          description: Type of price. Set to empty (null, not an empty string or "null" as a string) or omit this field for the default price.
          nullable: true
          enum:
            - outlet
    QuantityElement:
      required:
        - epc_class
      type: object
      properties:
        quantity:
          type: number
          description: A number that specifies how many or how much of the specified EPCClass is denoted by this QuantityElement.
          example: 200
        uom:
          type: string
          description: If present, specifies a unit of measure by which the specified quantity is to be interpreted as a physical measure, specifying how much of the specified EPCClass is denoted by this QuantityElement.
          example: KGM
        epc_class:
          type: string
          description: A class-level identifier for the class to which the specified quantity of objects belongs.
          example: urn:epc:class:lgtin:4012345.012345.998877
      description: A QuantityElement is a structure that identifies objects identified by a specific class-level identifier, either a specific quantity or an unspecified quantity.
    RefillGtinV2:
      type: object
      properties:
        sku_code:
          type: string
        gtin:
          type: string
          description: When an article has multiple GTINs, a random gtin for that article is returned
        stockroom_quantity:
          type: integer
          format: int32
        salesfloor_quantity:
          type: integer
          format: int32
        on_display_quantity:
          type: integer
          format: int32
        refill_quantity:
          type: integer
          format: int32
          nullable: true
        target_quantity:
          type: integer
          format: int32
          nullable: true
    RefillOptionV2:
      type: object
      properties:
        hash:
          type: string
          description: A hash of this option in this response.
        option_code:
          type: string
        refill_quantity:
          type: integer
          format: int32
          nullable: true
        availability:
          type: array
          items:
            $ref: '#/components/schemas/RefillGtinV2'
    RefillTarget:
      type: object
      properties:
        item:
          maxLength: 255
          minLength: 1
          type: string
        target_quantity:
          type: integer
    RefillResponseV2:
      type: object
      properties:
        hash:
          type: string
          description: A hash of the list of options in this response.
        time:
          type: string
          description: The server time at the moment the response was generated.
          format: date-time
        location:
          type: string
          description: Location identifier of the store.
          example: http://nedapretail.com/loc/store-1
        refill_quantity:
          type: integer
          format: int32
          nullable: true
        options:
          type: array
          description: Array of options is ordered based on refill priorities that are determined server side. Also, the list consists of either options which are presented on sales floor and for which at least 1 size is missing and can be refilled from stock room, or options for which size targets are not asserted where they could be. Note that the list of options can be empty if all options on the salesfloor have all available sizes presented.
          items:
            $ref: '#/components/schemas/RefillOptionV2'
        on_shelf_availability:
          type: number
          description: The on-shelf availability of this refill list
          format: double
          example: 0.5620437956204379
    RefillTargetsResponse:
      type: object
      properties:
        location:
          type: string
          description: Location identifier of the store.
          example: http://nedapretail.com/loc/store-1
        creation_date:
          type: string
          description: Creation time of the targets
          format: date-time
        expiration_date:
          type: string
          description: Expiration time of the targets
          format: date-time
        item_type:
          type: string
          description: Specifies which article reference is being used.
          enum:
            - gtin
            - sku_code
        targets:
          type: array
          description: List of Size Targets
          items:
            $ref: '#/components/schemas/RefillTarget'
    RfidCount:
      type: object
      properties:
        id:
          maxLength: 255
          minLength: 1
          type: string
          description: Identifier of the RFID count.
          example: 2f60bac5-c4d7-4ca7-b666-79bdf9b780b7
        location:
          maxLength: 255
          minLength: 1
          type: string
          description: Location identifier of the store or sublocation that the RFID count belongs to.
          example: http://nedapretail.com/loc/store-1
        event_time:
          type: string
          description: Date and time of the RFID count.
          format: date-time
        start_time:
          type: string
          description: Date and time the RFID count started.
          format: date-time
        quantity:
          type: integer
          description: Total quantity of items in the RFID count.
          format: int32
          example: 6253
        gtin_quantity:
          type: integer
          description: Total quantity of GTINs in the RFID count.
          format: int32
          example: 1542
        in_use:
          type: boolean
          description: Indicates whether the RFID count is used in a difference list. If it is used, the RFID count can not be deleted anymore.
          example: false
          default: false
        client_ids:
          maxItems: 10000
          uniqueItems: true
          type: array
          items:
            maxLength: 255
            minLength: 1
            type: string
        is_complete:
          type: boolean
          description: (deprecated) Indicates whether the RFID counts of all participants are included.
          example: true
          default: true
        is_partial_count:
          type: boolean
          description: Indicates whether the entire store was counted (false) or a part of the store (true).
          example: false
          default: false
        sgtins:
          maxLength: 10000
          uniqueItems: true
          type: array
          items:
            maxLength: 255
            minLength: 1
            type: string
        filter:
          description: If the count is a partial count, this field contains details of the filter that was used.
          discriminator:
            propertyName: filter_type
            mapping:
              none: '#/components/schemas/PartialCountFilterNone'
              article.v1: '#/components/schemas/PartialCountFilterArticleV1'
              sublocation.v1: '#/components/schemas/PartialCountFilterSublocationV1'
          oneOf:
            - $ref: '#/components/schemas/PartialCountFilterNone'
            - $ref: '#/components/schemas/PartialCountFilterArticleV1'
            - $ref: '#/components/schemas/PartialCountFilterSublocationV1'
        quality_checks:
          type: object
          properties:
            version:
              type: string
              description: The version of the quality check.
            quality_checks:
              type: array
              description: A list of quality checks that were performed on the count.
              items:
                $ref: '#/components/schemas/QualityCheck'
          description: The result of quality checks done for this count. Only available with Year End Count Service subscription.
      description: Provides information about an RFID count.
    RfidCountSummary:
      type: object
      properties:
        id:
          type: string
          description: Identifier of the RFID count.
          example: 2f60bac5-c4d7-4ca7-b666-79bdf9b780b7
        location:
          type: string
          description: Location identifier of the store or sublocation that the RFID count belongs to.
          example: http://nedapretail.com/loc/store-1
        event_time:
          type: string
          description: Date and time of the RFID count.
          format: date-time
        start_time:
          type: string
          description: Date and time the RFID count started.
          format: date-time
        finished_at_time:
          type: string
          description: Date and time the RFID count finished.
          format: date-time
        latest_observation_time:
          type: string
          description: Date and time of latest observation in the RFID count.
          format: date-time
        quantity:
          type: integer
          description: Total quantity of items in the RFID count.
          format: int32
          example: 6253
        gtin_quantity:
          type: integer
          description: Total quantity of GTINs in the RFID count.
          format: int32
          example: 1542
        in_use:
          type: boolean
          description: Indicates whether the RFID count is used in a difference list. If it is used, the RFID count can not be deleted anymore.
          example: false
          default: false
        client_ids:
          uniqueItems: true
          type: array
          items:
            type: string
        is_complete:
          type: boolean
          description: (deprecated) Indicates whether the RFID counts of all participants are included.
          example: true
          default: true
        is_partial_count:
          type: boolean
          description: Indicates whether the entire store was counted (false) or a part of the store (true).
          example: false
          default: false
        filter:
          description: If the count is a partial count, this field contains details of the filter that was used.
          discriminator:
            propertyName: filter_type
            mapping:
              none: '#/components/schemas/PartialCountFilterNone'
              article.v1: '#/components/schemas/PartialCountFilterArticleV1'
              sublocation.v1: '#/components/schemas/PartialCountFilterSublocationV1'
          oneOf:
            - $ref: '#/components/schemas/PartialCountFilterNone'
            - $ref: '#/components/schemas/PartialCountFilterArticleV1'
            - $ref: '#/components/schemas/PartialCountFilterSublocationV1'
        quality_checks:
          type: object
          properties:
            version:
              type: string
              description: The version of the quality check.
            quality_checks:
              type: array
              description: A list of quality checks that were performed on the count.
              items:
                $ref: '#/components/schemas/QualityCheck'
          description: The result of quality checks done for this count. Only available with Year End Count Service subscription.
      description: Provides summary information about an RFID count.
    QualityCheck:
      required:
        - check
        - result
      type: object
      properties:
        check:
          type: string
          description: The type of quality check that was performed.
        result:
          type: string
          description: The quality check status of the count. When the status is "pass", the quality check is considered to be correct. When the status is "fail", the quality check is considered to be incorrect.
          enum:
            - pass
            - fail
        reason:
          type: string
          description: The reason why the quality check failed.
    Size:
      type: object
      properties:
        description:
          maxLength: 255
          type: string
          description: The size description for the specified region. Can contain both size and length.
          example: XL
        region:
          maxLength: 15
          type: string
          description: The country defining the region where this size description is used ("EU", "World", or an ISO 3166-1 alpha-2 two letter country code).
          example: NL
    SourceElement:
      required:
        - source
        - type
      type: object
      properties:
        type:
          maxLength: 255
          type: string
          description: An identifier that indicates what kind of source this Source denotes.
          example: urn:epcglobal:cbv:sdt:location
        source:
          maxLength: 255
          type: string
          description: An identifier that denotes a specific source.
          example: urn:epc:id:sgln:4012345.00225.0
    StockResponse:
      type: object
      properties:
        generated:
          type: string
          description: Date and time when the count was requested.
          format: date-time
        gtins:
          type: array
          description: List of GTINs in the count.
          items:
            type: string
        locations:
          type: array
          description: List of location identifiers in the count, corresponding to the GTIN in the GTIN list.
          items:
            type: string
        quantities:
          type: array
          description: Counted quantity, corresponding to the GTIN in the GTIN list.
          items:
            type: integer
            format: int32
        time:
          type: string
          description: Date and time of the RFID count.
          format: date-time
        articles:
          type: array
          description: Article details like name, size, etc., corresponding to the GTIN in the GTIN list.
          items:
            $ref: '#/components/schemas/Article'
        rfid_stock_time:
          type: string
          description: Date and time of the RFID count.
          format: date-time
        rfid_stock_start_time:
          type: string
          description: Date and time the RFID count started.
          format: date-time
        finished_at_time:
          type: string
          description: Date and time the RFID count was finished.
          format: date-time
        latest_observation_time:
          type: string
          description: Date and time of latest observation in the RFID count.
          format: date-time
        stock_rooms_quantity:
          type: integer
          description: Total quantity of items in stockrooms.
          format: int32
        sales_floors_quantity:
          type: integer
          description: Total quantity of items on sales floors.
          format: int32
        store_quantity:
          type: integer
          description: Total quantity of items in the store.
          format: int32
        stock_ratio:
          type: number
          description: Percentage of total store stock registered in the stockrooms.
          format: double
        client_ids:
          uniqueItems: true
          type: array
          description: Identifiers of all devices that participated in the RFID count.
          items:
            type: string
        is_complete:
          type: boolean
          description: (deprecated) Indicates whether the RFID counts of all participants are included.
          example: true
          default: true
        is_partial_count:
          type: boolean
          description: Indicates whether the entire store was counted (false) or a part of the store (true).
          example: false
          default: false
        filter:
          description: If the count is a partial count, this field contains details of the filter that was used.
          discriminator:
            propertyName: filter_type
            mapping:
              none: '#/components/schemas/PartialCountFilterNone'
              article.v1: '#/components/schemas/PartialCountFilterArticleV1'
              sublocation.v1: '#/components/schemas/PartialCountFilterSublocationV1'
          oneOf:
            - $ref: '#/components/schemas/PartialCountFilterNone'
            - $ref: '#/components/schemas/PartialCountFilterArticleV1'
            - $ref: '#/components/schemas/PartialCountFilterSublocationV1'
    TransactionEvent:
      allOf:
        - $ref: '#/components/schemas/EpcisEvent'
        - type: object
          properties:
            parent_id:
              type: string
              description: The identifier of the parent of the objects given in epcList and quantityList.
              example: urn:epc:id:sscc:08410580.999999999
            epc_list:
              type: array
              description: An unordered list of the EPCs of the objects identified by instance-level identifiers associated with the business transaction.
              items:
                type: string
            quantity_list:
              type: array
              description: An unordered list of one or more QuantityElements identifying objects (at the class level) to which the event pertained.
              items:
                $ref: '#/components/schemas/QuantityElement'
    TransformationEvent:
      allOf:
        - $ref: '#/components/schemas/EpcisEvent'
        - type: object
          properties:
            input_epc_list:
              type: array
              description: An unordered list of one or more EPCs identifying (at the instance level) objects that were inputs to the transformation.
              items:
                type: string
            output_epc_list:
              type: array
              description: An unordered list of one or more EPCs naming (at the instance level) objects that were outputs from the transformation.
              items:
                type: string
            input_quantity_list:
              type: array
              description: An unordered list of one or more QuantityElements identifying (at the class level) objects that were inputs to the transformation.
              items:
                $ref: '#/components/schemas/QuantityElement'
            output_quantity_list:
              type: array
              description: An unordered list of one or more QuantityElements identifying (at the class level) objects that were outputs from the transformation.
              items:
                $ref: '#/components/schemas/QuantityElement'
            transformation_id:
              type: string
              description: A unique identifier that links this event to other TransformationEvents having an identical value of 'transformationID'.
              example: afcb68c9-bba9-4101-8f3f-ded8a1dbdfba
    DisplayCompliance:
      required:
        - location
        - put_on_suggestions
        - time
      type: object
      properties:
        location:
          type: string
          description: Location ID of store.
          example: http://nedapretail.com/loc/store-999
        time:
          type: string
          description: The date and time at which the display compliance suggestion list was created.
          format: date-time
        record_time:
          type: string
          description: The date and time at which the display compliance suggestion list was recorded in !D Cloud. The record_time field is  automatically filled in by !D Cloud when a list is created or updated.
          format: date-time
        put_on_suggestions:
          type: array
          description: A list of put-on suggestions (1 or more). The put-on suggestions are ordered by 1) "stars" and 2) "priority".
          items:
            $ref: '#/components/schemas/PutOnSuggestion'
    PutOnSuggestion:
      required:
        - option_code
      type: object
      properties:
        option_code:
          type: string
          description: Option code of the article. Articles referring to this option code must exist in the !D Cloud article database.
          example: '217055'
        priority:
          type: integer
          description: Unbounded positive number. Is used to order put-on suggestions within the same stars group. If omitted, value 1 will be used.
          format: int32
          example: 8
        stars:
          type: integer
          description: Value between 1 and 5. All put-on suggestions with the same number of stars will be grouped together. Within that group, the put-on suggestions are (descending) ordered by priority field.
          format: int32
          example: 5
        remarks:
          type: string
          description: Can be used to give extra information about the put-on suggestion item.
          example: New season
        take_off_suggestions:
          type: array
          description: For each put-on suggestions there can be 0, 1 or more take-off suggestions. The take-off suggestions are ordered by priority.
          items:
            $ref: '#/components/schemas/TakeOffSuggestion'
    TakeOffSuggestion:
      required:
        - option_code
      type: object
      properties:
        option_code:
          type: string
          description: Option code of the article. Articles referring to this option code must exist in the !D Cloud article database.
          example: '651924'
        priority:
          type: integer
          description: Unbounded positive number. If omitted, value 1 will be used.
          format: int32
          example: 7
    ApprovedDifferenceListAccuracyKpiValue:
      type: object
      properties:
        accuracy:
          type: number
          format: double
    CountDurationKpiValue:
      type: object
      properties:
        quantity:
          type: integer
          format: int32
        clients:
          type: integer
          format: int32
        duration_in_sec:
          type: integer
          format: int32
        duration_calculated:
          type: number
          format: double
    CountProgressKpiValue:
      type: object
      properties:
        progress:
          type: number
          format: double
    CountStatusKpiValue:
      type: object
      properties:
        incomplete:
          type: integer
          format: int32
        complete:
          type: integer
          format: int32
        approved:
          type: integer
          format: int32
        not_counted:
          type: integer
          format: int32
    CountTotalDurationKpiValue:
      type: object
      properties:
        total_duration:
          type: integer
          format: int32
    DifferenceListAccuracyKpiValue:
      type: object
      properties:
        accuracy:
          type: number
          format: double
    Division:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    KpiRecentDaysCategoryAccuracyResponse:
      type: object
      properties:
        division:
          $ref: '#/components/schemas/Division'
        data:
          type: object
          additionalProperties:
            type: number
            format: double
    KpiRecentDaysResponse:
      type: object
      properties:
        division:
          $ref: '#/components/schemas/Division'
        data:
          type: array
          items:
            $ref: '#/components/schemas/RecentDaysKpi'
    KpiWeeklyResponse:
      type: object
      properties:
        division:
          $ref: '#/components/schemas/Division'
        store:
          $ref: '#/components/schemas/KpiStore'
        data:
          type: array
          items:
            $ref: '#/components/schemas/WeeklyKpi'
    KpiDailyResponse:
      type: object
      properties:
        store:
          $ref: '#/components/schemas/KpiStore'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DailyKpi'
    OnShelfAvailabilityKpiValue:
      type: object
      properties:
        on_shelf_availability:
          type: number
          format: double
    RecentDaysKpi:
      type: object
      properties:
        division:
          $ref: '#/components/schemas/Division'
        store:
          $ref: '#/components/schemas/KpiStore'
        approved_difference_list_accuracy_kpi_value:
          $ref: '#/components/schemas/ApprovedDifferenceListAccuracyKpiValue'
        count_status_kpi_value:
          $ref: '#/components/schemas/CountStatusKpiValue'
        count_duration_kpi_value:
          $ref: '#/components/schemas/CountDurationKpiValue'
        count_progress_kpi_value:
          $ref: '#/components/schemas/CountProgressKpiValue'
        count_total_duration_kpi_value:
          $ref: '#/components/schemas/CountTotalDurationKpiValue'
        on_shelf_availability_kpi_value:
          $ref: '#/components/schemas/OnShelfAvailabilityKpiValue'
        shipment_reliability_kpi_value:
          $ref: '#/components/schemas/ShipmentReliabilityKpiValue'
        approved_difference_list_category_accuracy_kpi_value:
          type: object
          additionalProperties:
            type: number
            format: double
        difference_list_accuracy_kpi_value:
          $ref: '#/components/schemas/DifferenceListAccuracyKpiValue'
    ShipmentReliabilityKpiValue:
      type: object
      properties:
        percentage:
          type: number
          format: double
    KpiStore:
      type: object
      properties:
        id:
          type: integer
          format: int64
        location:
          type: string
        name:
          type: string
    WeekInfo:
      type: object
      properties:
        year:
          type: integer
          format: int32
        week:
          type: integer
          format: int32
    WeeklyKpi:
      type: object
      properties:
        week_info:
          $ref: '#/components/schemas/WeekInfo'
        approved_difference_list_accuracy_kpi_value:
          $ref: '#/components/schemas/ApprovedDifferenceListAccuracyKpiValue'
        count_status_kpi_value:
          $ref: '#/components/schemas/CountStatusKpiValue'
        count_duration_kpi_value:
          $ref: '#/components/schemas/CountDurationKpiValue'
        count_progress_kpi_value:
          $ref: '#/components/schemas/CountProgressKpiValue'
        count_total_duration_kpi_value:
          $ref: '#/components/schemas/CountTotalDurationKpiValue'
        on_shelf_availability_kpi_value:
          $ref: '#/components/schemas/OnShelfAvailabilityKpiValue'
        shipment_reliability_kpi_value:
          $ref: '#/components/schemas/ShipmentReliabilityKpiValue'
        approved_difference_list_category_accuracy_kpi_value:
          type: object
          additionalProperties:
            type: number
            format: double
        difference_list_accuracy_kpi_value:
          $ref: '#/components/schemas/DifferenceListAccuracyKpiValue'
    DailyKpi:
      type: object
      properties:
        date:
          pattern: ^\d{4}-\d{2}$
          type: string
        approved_difference_list_accuracy_kpi_value:
          $ref: '#/components/schemas/ApprovedDifferenceListAccuracyKpiValue'
        count_status_kpi_value:
          $ref: '#/components/schemas/CountStatusKpiValue'
        count_duration_kpi_value:
          $ref: '#/components/schemas/CountDurationKpiValue'
        count_progress_kpi_value:
          $ref: '#/components/schemas/CountProgressKpiValue'
        count_total_duration_kpi_value:
          $ref: '#/components/schemas/CountTotalDurationKpiValue'
        on_shelf_availability_kpi_value:
          $ref: '#/components/schemas/OnShelfAvailabilityKpiValue'
        shipment_reliability_kpi_value:
          $ref: '#/components/schemas/ShipmentReliabilityKpiValue'
        approved_difference_list_category_accuracy_kpi_value:
          type: object
          additionalProperties:
            type: number
            format: double
        difference_list_accuracy_kpi_value:
          $ref: '#/components/schemas/DifferenceListAccuracyKpiValue'
    StoreAddress:
      type: object
      properties:
        address:
          type: string
          description: Street name and house number.
          example: Dam 4
        zipcode:
          type: string
          description: ZIP code.
          example: 1012 NP
        city:
          type: string
          description: Name of the city.
          example: Amsterdam
        country_code:
          type: string
          description: ISO 3166-1 alpha-2 two letter country code.
          example: NL
    Location:
      type: object
      properties:
        id:
          type: string
          description: Unique location identifier.
          example: http://nedapretail.com/loc/store-1
        type:
          type: string
          description: Type of location.
          example: SITE
        subtype:
          type: string
          description: Subtype of store or location.
          example: FASHION
        name:
          type: string
          description: Name of the store or location.
          example: Miss Fashion Amsterdam
        address:
          $ref: '#/components/schemas/StoreAddress'
        children:
          type: array
          description: List of sublocations (if any). Only when type equals 'site'.
          items:
            $ref: '#/components/schemas/Location'
        parent_id:
          type: string
          description: Location identifier of parent (only when type = 'location', 'location_internal' or 'location_external').
          example: http://nedapretail.com/loc/store-1
        store_code:
          type: string
          description: Store code (branch ID) of the store or location (as defined by retailer). Only when type equals 'site'.
          example: '001'
    Organization:
      type: object
      properties:
        type:
          type: string
          description: 'Type of the organization. Values: ORGANIZATION or BUSINESS_PARTNER.'
          example: ORGANIZATION
        name:
          type: string
          description: Name of the organization.
          example: Miss Fashion
        organization_id:
          type: integer
          description: Identifier of the organization.
          format: int64
          example: 2736423
    Organizations:
      type: object
      properties:
        own:
          $ref: '#/components/schemas/Organization'
        linked:
          type: array
          description: Linked organization, other organization(s) you have access to.
          items:
            $ref: '#/components/schemas/Organization'
    OrganizationAddress:
      type: object
      properties:
        address_line_1:
          type: string
          description: First line of street address.
          example: High Street 3
        address_line_2:
          type: string
          description: Second line of street address.
        city:
          type: string
          description: City.
          example: Big City
        region:
          type: string
          description: Region.
          example: South
        postal_code:
          type: string
          description: Postal code.
          example: '12345'
        country_code:
          type: string
          description: ISO 3166-1 alpha-2 two letter country code.
          example: NL
        latitude:
          type: number
          description: Latitude of store location
          format: double
        longitude:
          type: number
          description: Longitude of store location
          format: double
    OrganizationStore:
      type: object
      properties:
        location:
          type: string
          description: GS1 compatible location identifier (URI or SGLN) that serves as primary identifier for the store.
          example: http://nedapretail.com/loc/store-1
        division_id:
          type: integer
          description: ID of the division this store belongs to.
          format: int64
          example: 123
        name:
          type: string
          description: Name of the store.
          example: Miss Fashion Amsterdam
        store_code:
          type: string
          description: Abbreviation or code as defined by retailer.
          example: '001'
        store_type:
          type: string
          example: fashion
          enum:
            - diy_shop
            - electronics
            - fashion
            - health_and_beauty
            - office
            - printshop
            - production_facility
            - shopping_mall
            - distribution_center
            - sport
            - supermarket
        timezone:
          type: string
          description: Name of the timezone of the store as specified in the TZ database, like "Europe/Amsterdam".
          example: Europe/Amsterdam
        address:
          $ref: '#/components/schemas/OrganizationAddress'
        sublocations:
          type: array
          description: List of sublocations in the store (can be empty).
          items:
            $ref: '#/components/schemas/Sublocation'
    Sublocation:
      type: object
      properties:
        location:
          type: string
          description: GS1 compatible location identifier (URI or SGLN) that serves as primary identifier for the sublocation.
          example: http://nedapretail.com/loc/sublocation-123
        name:
          type: string
          description: Name of the sublocation.
          example: Sales floor A
        sublocation_type:
          type: string
          description: Type of sublocation.
          example: sales_floor
          enum:
            - sales_floor
            - stockroom
            - offsite_storage
    OrganizationDivision:
      type: object
      properties:
        id:
          type: integer
          description: Division ID.
          format: int64
          example: 123
        name:
          type: string
          description: Name of the division.
          example: Europe
        parent_division_id:
          type: integer
          description: Division ID of the parent division (field is omitted if parent division is the DM root division).
          format: int64
          example: 456
    Subscription:
      required:
        - event_type
        - secret
        - url
      type: object
      properties:
        id:
          type: string
          description: Subscription identifier. Can be ommited when creating subscription.
          format: uuid
          example: a0fedec8-b730-11e8-96f8-529269fb1459
        url:
          type: string
          description: HTTPS POST payloads are delivered to this URL. Note that only https scheme is supported.
          format: uri
          example: https://example.com/webhooks/receiver
        event_type:
          type: array
          description: A list of event-types to receive (1 or more).
          items:
            type: string
            enum:
              - stock_count
              - difference_list_approved
              - shipmentv2_received
              - shipment_ready_to_ship
              - stock_count_unserialized
        secret:
          type: string
          description: The secret is used for calculating HMAC hex digest. With that, the receiver can verify that the message originated from Nedap Retail.
          example: secret123
        created_on:
          type: string
          description: Creation timestamp.
          format: date-time
    WebhookDeliverySummary:
      type: object
      properties:
        delivery:
          type: string
          description: Identifies the delivery.
          format: uuid
          example: 4bda38f4-b742-11e8-96f8-529269fb1459
        created_on:
          type: string
          description: Creation timestamp.
          format: date-time
        successful:
          type: boolean
          description: Indicates if the last attempt to deliver the webhook request was successful.
        status:
          type: string
          description: Status of the webhook delivery. Successful means the delivery was successful, retrying means the last delivery attempt was not successful but we will retry, failed means the maximum number of retries was reached and we will not try again.
          nullable: true
          enum:
            - successful
            - retrying
            - failed
    WebhookDeliveryRequest:
      type: object
      properties:
        subscription_id:
          type: string
          format: uuid
          example: a0fedec8-b730-11e8-96f8-529269fb1459
        delivery:
          type: string
          format: uuid
        url:
          type: string
          format: url
          example: https://example.com/webhooks/receiver
        payload:
          type: string
          example: '{"location":"https://api.nedapretail.com/rfid_count/v1/retrieve_sgtins?id=abc"}'
        headers:
          type: object
          additionalProperties:
            type: string
          description: Request headers (content-type, X-Delivery, X-Hub-Signature, X-Event, etc.
          example:
            X-Delivery: a4bda38f4-b742-11e8-96f8-529269fb1459
            X-Event: stock_count
            X-Hub-Signature: '1234'
            User-Agent: Nedap-Retail-Webhook/1.0
            Content-Type: application/json; charset=UTF-8
        created_on:
          type: string
          format: date-time
    WebhookDeliveryResponse:
      type: object
      properties:
        code:
          type: integer
          description: HTTP response status code. If there was no response (i.e. exception) than code contains negative value.
          example: 200
        message:
          type: string
          description: HTTP response message.
          example: OK
        headers:
          type: object
          additionalProperties:
            type: string
          description: Response headers.
          example:
            Connection: keep-alive
            Server: Nginx
    WebhookDelivery:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/WebhookDeliveryRequest'
        response:
          $ref: '#/components/schemas/WebhookDeliveryResponse'
        processing_time:
          type: integer
          description: Time it took to send the POST request in milliseconds.
          example: 84
        retry_count:
          type: integer
          description: How often a failed webhook POST request has been retried.
        status:
          type: string
          description: Status of the webhook delivery. Successful means the delivery was successful, retrying means the last delivery attempt was not successful but we will retry, failed means the maximum number of retries was reached and we will not try again.
          nullable: true
          enum:
            - successful
            - retrying
            - failed
    CreateSearchList:
      required:
        - description
        - end_date
        - item_type
        - items_to_be_found
        - location
        - name
        - start_date
        - type
      type: object
      properties:
        location:
          maxLength: 255
          type: string
          description: Location identifier for the store where the search list is supposed to be executed.
          example: http://nedapretail.com/loc/store-999
        name:
          maxLength: 255
          type: string
          description: A short name for the search list.
          example: Recall dangerous goods
        description:
          maxLength: 1024
          type: string
          description: A description explaining about the search list.
          example: These goods are considered dangerous by the NVWA and should be collected ASAP. Collect them and destroy them according to safety regulations.
        type:
          type: string
          description: 'One of the following strings indicating the search list type: ''return'': Return to warehouse, ''recall'': Product recall, ''price-change'': Price promotions (mark downs) and price changes'
          example: recall
          enum:
            - return
            - recall
            - price-change
        start_date:
          type: string
          description: Time when the search list may be started.
          format: date-time
        end_date:
          type: string
          description: Time when the search list should be finished.
          format: date-time
        item_type:
          type: string
          description: The type of items to be stored.
          example: gtin
          enum:
            - option_code
            - gtin
            - sku_code
        items_to_be_found:
          maxItems: 150000
          minItems: 1
          type: array
          description: The actual items to be found (maximum 150k items).
          items:
            $ref: '#/components/schemas/ItemToBeFound'
    SearchListFinishRequest:
      required:
        - id
      type: object
      properties:
        id:
          maxLength: 255
          type: string
          description: Search list identifier.
    SearchListUndoFinishRequest:
      required:
        - id
      type: object
      properties:
        id:
          maxLength: 255
          type: string
          description: Search list identifier.
    ItemToBeFound:
      required:
        - item
      type: object
      properties:
        item:
          maxLength: 255
          type: string
          description: An option code, GTIN or SKU code as specified in the item_type field.
          example: '05012345678900'
        action:
          maxLength: 255
          type: string
          description: A short description of the action to be taken (relevant for price-change search lists).
          example: Apply "20% Off" sticker
    SearchList:
      type: object
      properties:
        id:
          type: string
          description: Search list identifier.
        hash:
          type: string
          description: Hash string representing the search list record, indicates a changed searchlist when the hash differs.
        location:
          type: string
          description: Location identifier for the store where the search list is supposed to be executed.
          example: http://nedapretail.com/loc/store-999
        name:
          type: string
          description: A short name for the search list.
          example: Recall dangerous goods
        description:
          type: string
          description: A description explaining about the search list.
          example: These goods are considered dangerous by the NVWA and should be collected ASAP. Collect them and destroy them according to safety regulations.
        type:
          type: string
          description: 'One of the following strings indicating the search list type: ''return'': Return to warehouse, ''recall'': Product recall, ''price-change'': Price promotions (mark downs) and price changes'
          example: recall
          enum:
            - return
            - recall
            - price-change
        start_date:
          type: string
          description: Time when the search list may be started.
          format: date-time
        end_date:
          type: string
          description: Time when the search list should be finished.
          format: date-time
        finished_at:
          type: string
          description: Time when search list was finished.
          format: date-time
        item_type:
          type: string
          description: 'Specifies what identifier is used to specify the items to be found: option code, GTIN or SKU code.'
          example: gtin
          enum:
            - option_code
            - gtin
            - sku_code
        items_to_be_found:
          type: array
          description: The actual items to be found.
          items:
            $ref: '#/components/schemas/ItemToBeFound'
    SearchListsResponse:
      type: object
      properties:
        records_filtered:
          type: integer
          description: Total records, after filtering (i.e. the total number of records after filtering has been applied - not just the number of records being returned for this page of data).
          format: int32
        searchlists:
          type: array
          description: Ordered array of search list items.
          items:
            $ref: '#/components/schemas/SearchList'
    EpcStateResponse:
      type: object
      properties:
        disposition:
          type: string
          description: Disposition (status) of the item
        disposition_last_updated:
          type: string
          description: ISO8601 representation of the date/time. Indicates moment the disposition was last changed.
          format: date-time
        timestamp:
          type: string
          description: ISO8601 representation of the date/time. Indicates most recent time the EPC was observed.
          format: date-time
        epc_uri:
          type: string
          description: EPC formatted as pure identity URI
        biz_location:
          type: string
          description: Location identifier of the last known location of the item
        biz_location_last_updated:
          type: string
          description: ISO8601 representation of the date/time. Indicates moment the biz_location was last changed.
          format: date-time
    GtinRfidStockResponse:
      type: object
      properties:
        stocks:
          type: array
          items:
            $ref: '#/components/schemas/GtinRfidStock'
    GtinRfidStock:
      type: object
      properties:
        location:
          type: string
        time:
          type: string
          format: date-time
        quantity:
          type: integer
          format: int32
        gtins:
          type: array
          items:
            type: string
        quantities:
          type: array
          items:
            type: integer
            format: int32
        articles:
          type: array
          items:
            $ref: '#/components/schemas/Article'
        gtin_quantity:
          type: integer
          format: int32
    RealtimeStockMutationSearchResponse:
      required:
        - pagination
        - records_filtered
      type: object
      properties:
        mutations:
          type: array
          items:
            $ref: '#/components/schemas/RealtimeStockMutation'
        records_filtered:
          type: integer
          format: int32
        pagination:
          required:
            - has_more
          type: object
          properties:
            has_more:
              type: boolean
            time:
              type: string
              format: date-time
            epc:
              type: string
    SgtinRfidStockResponse:
      type: object
      properties:
        stocks:
          type: array
          items:
            $ref: '#/components/schemas/SgtinRfidStock'
    SgtinRfidStock:
      type: object
      properties:
        location:
          type: string
          description: Location identifier of the stock.
          example: http://nedapretail.com/loc/store-1
        time:
          type: string
          description: Date and time of the stock.
          format: date-time
        quantity:
          type: integer
          description: Quantity of items in the stock.
          format: int32
          example: 6273
        sgtins:
          uniqueItems: true
          type: array
          description: Serialized GTINs in the stock.
          items:
            type: string
        disposition:
          type: string
          description: Disposition of these Serialized GTINs.
          example: urn:epcglobal:cbv:disp:sellable_accessible
    SgtinRfidStockList:
      type: object
      properties:
        stocks:
          type: array
          items:
            $ref: '#/components/schemas/SgtinRfidStockForLocation'
    SgtinRfidStockForLocation:
      type: object
      properties:
        location:
          type: string
          description: Location identifier of the stock.
          example: http://nedapretail.com/loc/store-1
        time:
          type: string
          description: Date and time of the stock.
          format: date-time
        quantity:
          type: integer
          description: Quantity of items in the stock.
          format: int32
          example: 6273
        sgtins:
          uniqueItems: true
          type: array
          description: Serialized GTINs in the stock.
          items:
            type: string
    RealtimeStockMutation:
      type: object
      properties:
        time:
          type: string
          description: Date and time of the mutation.
          format: date-time
        epc:
          type: string
          example: urn:epc:id:sgtin:8716232.080001.1
        gtin:
          type: string
          example: '08716232800012'
        mutation_type:
          type: string
          enum:
            - add
            - update
            - delete
        biz_step:
          type: string
          description: The business step causing the mutation.
          example: urn:epcglobal:cbv:bizstep:cycle_counting
        from_location:
          type: string
          description: Location identifier of the location the item was registered on before the mutation. This field is filled when mutation_type is "update" or "delete".
          example: http://nedapretail.com/loc/store-1
        from_disposition:
          type: string
          description: Disposition of the item before the mutation. This field is filled when mutation_type is "update" or "delete".
          example: urn:epcglobal:cbv:disp:in_transit
        to_location:
          type: string
          description: Location identifier of the location the item is registered on after the mutation. This field is filled when mutation_type is "add" or "update".
          example: http://nedapretail.com/loc/store-2
        to_disposition:
          type: string
          description: Disposition of the item after the mutation. This field is filled when mutation_type is "add" or "update".
          example: urn:epcglobal:cbv:disp:sellable_accessible
    SellRequest:
      required:
        - biz_location
        - identifiers
        - identifiers_type
        - timestamp
      type: object
      properties:
        identifiers:
          maxItems: 10000
          minItems: 1
          type: array
          description: Identifiers of the items that are to be marked sold. The identifiers_type field determines how this value is interpreted. Maximum 10k items per request.
          items:
            maxLength: 255
            type: string
        identifiers_type:
          $ref: '#/components/schemas/IdentifiersType'
        disposition:
          maxLength: 255
          type: string
          description: Disposition
          example: urn:epcglobal:cbv:disp:retail_sold
          default: urn:epcglobal:cbv:disp:retail_sold
        biz_location:
          maxLength: 255
          type: string
          description: Location identifier of the store or sublocation.
          example: http://nedapretail.com/loc/store-1
        read_point:
          maxLength: 255
          type: string
          description: Location identifier of readpoint (optional, will be equal to 'biz_location' if omitted).
          example: http://nedapretail.com/loc/store-1
        timestamp:
          type: string
          description: ISO8601 representation of the date/time the item was sold.
          format: date-time
        online_sold:
          type: boolean
          description: Provides an easy way to specify the disposition that is assigned to the specified items. This parameter is ignored if the disposition parameter is specified. If true, items are assigned the `http://nedapretail.com/disp/online_sold` disposition. If false, items are assigned the `urn:epcglobal:cbv:disp:sellable_not_accessible` disposition. If null or unspecified, items are assigned the `urn:epcglobal:cbv:disp:retail_sold` disposition.
          nullable: true
        recorded_timestamp:
          type: string
          description: (deprecated) ISO8601 representation of the date/time the transaction was recorded.
          format: date-time
          deprecated: true
      description: ''
    ReturnRequest:
      required:
        - biz_location
        - identifiers
        - identifiers_type
        - timestamp
      type: object
      properties:
        identifiers:
          maxItems: 10000
          minItems: 1
          type: array
          description: Identifiers of the items that are to be marked returned to store. The identifiers_type field determines how this value is interpreted. Maximum 10k items per request.
          items:
            maxLength: 255
            type: string
        identifiers_type:
          $ref: '#/components/schemas/IdentifiersType'
        disposition:
          maxLength: 255
          type: string
          description: Disposition
          example: urn:epcglobal:cbv:disp:sellable_accessible
          default: urn:epcglobal:cbv:disp:sellable_accessible
        biz_location:
          maxLength: 255
          type: string
          description: Location identifier of the store or sublocation.
          example: http://nedapretail.com/loc/store-1
        read_point:
          maxLength: 255
          type: string
          description: Location identifier of readpoint (optional, will be equal to 'biz_location' if omitted).
          example: http://nedapretail.com/loc/store-1
        timestamp:
          type: string
          description: ISO8601 representation of the date/time the item was sold.
          format: date-time
        recorded_timestamp:
          type: string
          description: (deprecated) ISO8601 representation of the date/time the transaction was recorded.
          format: date-time
          deprecated: true
      description: ''
    TransactionSellNonSerializedRequest:
      required:
        - biz_location
        - identifiers_type
        - items
        - timestamp
      type: object
      properties:
        identifiers_type:
          type: string
          description: Determines how the identifiers values should be interpreted.
          enum:
            - gtin
        disposition:
          maxLength: 255
          type: string
          description: Disposition.
          example: urn:epcglobal:cbv:disp:retail_sold
          default: urn:epcglobal:cbv:disp:retail_sold
        biz_location:
          maxLength: 255
          type: string
          description: Location identifier of the store or sublocation.
          example: http://nedapretail.com/loc/store-1
        read_point:
          maxLength: 255
          type: string
          description: Location identifier of readpoint (will be equal to 'biz_location' if omitted).
          example: http://nedapretail.com/loc/store-1
        timestamp:
          type: string
          description: ISO8601 representation of the date/time the item was sold.
          format: date-time
        items:
          maxItems: 10000
          minItems: 1
          type: array
          description: List of items that are sold. Maximum 10k items per request.
          items:
            $ref: '#/components/schemas/TransactionItem'
        sell_from:
          type: string
          description: If biz_location is a store, use this parameter to indicate if the sold items should be sold from a sales floor or from a stockroom.
          enum:
            - sales_floor
            - stockroom
    TransactionReturnNonSerializedRequest:
      required:
        - biz_location
        - identifiers_type
        - items
        - timestamp
      type: object
      properties:
        identifiers_type:
          type: string
          description: Determines how the identifiers values should be interpreted.
          enum:
            - gtin
        disposition:
          maxLength: 255
          type: string
          description: Specify the disposition the returned items should get. If omitted, defaults to `urn:epcglobal:cbv:disp:sellable_not_accessible`.
          example: urn:epcglobal:cbv:disp:sellable_not_accessible
          default: urn:epcglobal:cbv:disp:sellable_not_accessible
        biz_location:
          maxLength: 255
          type: string
          description: Location identifier of the store or sublocation
          example: http://nedapretail.com/loc/store-1
        read_point:
          maxLength: 255
          type: string
          description: Location identifier of readpoint (will be equal to 'biz_location' if omitted).
          example: http://nedapretail.com/loc/store-1
        timestamp:
          type: string
          description: ISO8601 representation of the date/time the item was returned.
          format: date-time
        items:
          maxItems: 10000
          minItems: 1
          type: array
          description: List of items that are returned. Maximum 10k items per request.
          items:
            $ref: '#/components/schemas/TransactionItem'
    MoveRequestV2:
      required:
        - biz_location
        - identifiers
        - identifiers_type
        - timestamp
      type: object
      properties:
        identifiers:
          maxItems: 10000
          minItems: 1
          type: array
          description: The identifiers of the items that are moved. The list should contain at least one item.  Maximum 10k items per request.
          items:
            maxLength: 255
            type: string
        identifiers_type:
          $ref: '#/components/schemas/IdentifiersType'
        biz_location:
          type: string
          description: Location identifier of the destination (sublocation of the store).
          example: http://nedapretail.com/loc/store-1
        timestamp:
          type: string
          description: ISO8601 representation of the date/time the items are moved.
          format: date-time
    DisplayRequestV2:
      required:
        - biz_location
        - identifiers
        - identifiers_type
        - timestamp
      type: object
      properties:
        identifiers:
          maxItems: 10000
          minItems: 1
          type: array
          description: The identifiers of the items that are displayed or showcased. The list should contain at least one item.  Maximum 10k items per request.
          items:
            maxLength: 255
            type: string
        identifiers_type:
          $ref: '#/components/schemas/IdentifiersType'
        biz_location:
          maxLength: 255
          type: string
          description: Location identifier of the store or sublocation.
          example: http://nedapretail.com/loc/store-1
        timestamp:
          type: string
          description: ISO8601 representation of the date/time the items are displayed.
          format: date-time
        displayed:
          type: boolean
          description: When true, items are set to displayed. When false (and showcased is not set to true), the items are removed from the display.
          default: true
        showcased:
          type: boolean
          description: When true, items are set to showcased. When false (and displayed is not set to true), the items are removed from the display.
          default: false
    LendRequestV2:
      required:
        - biz_location
        - identifiers
        - identifiers_type
        - timestamp
      type: object
      properties:
        identifiers:
          maxItems: 10000
          minItems: 1
          type: array
          description: The identifiers of the items that are lent. The list should contain at least one item. Maximum 10k items per request.
          items:
            maxLength: 255
            type: string
        identifiers_type:
          $ref: '#/components/schemas/IdentifiersType'
        biz_location:
          maxLength: 255
          type: string
          description: Location identifier of the store or sublocation.
          example: http://nedapretail.com/loc/store-1
        timestamp:
          type: string
          description: ISO8601 representation of the date/time the items are lent.
          format: date-time
        lent:
          type: boolean
          description: When set to false, the items are returned and are part of the stock.
          default: true
    InspectRequestV2:
      required:
        - biz_location
        - identifiers
        - identifiers_type
        - timestamp
      type: object
      properties:
        identifiers:
          maxItems: 10000
          minItems: 1
          type: array
          description: The identifiers of the items that are inspected. The list should contain at least one item. Maximum 10k items per request.
          items:
            maxLength: 255
            type: string
        identifiers_type:
          $ref: '#/components/schemas/IdentifiersType'
        biz_location:
          maxLength: 255
          type: string
          description: Location identifier of the store or sublocation.
          example: http://nedapretail.com/loc/store-1
        timestamp:
          type: string
          description: ISO8601 representation of the date/time the items are inspected.
          format: date-time
        damaged:
          type: boolean
          description: When true, items are set to damaged. When false (and faulty and missing_article are not set to true), the items are returned as part of the stock.
          default: true
        faulty:
          type: boolean
          description: When true, items are set to faulty. When false (and damaged and missing_article are not set to true), the items are returned as part of the stock.
          default: false
        missing_article:
          type: boolean
          description: When true, items are set to missing. When false (and damaged and faulty are not set to true), the items are returned as part of the stock.
          default: false
    CustomizeRequestV2:
      required:
        - biz_location
        - identifiers
        - identifiers_type
        - timestamp
      type: object
      properties:
        identifiers:
          maxItems: 10000
          minItems: 1
          type: array
          description: The identifiers of the items that are customized. The list should contain at least one item. Maximum 10k items per request.
          items:
            maxLength: 255
            type: string
        identifiers_type:
          $ref: '#/components/schemas/IdentifiersType'
        biz_location:
          maxLength: 255
          type: string
          description: Location identifier of the store or sublocation.
          example: http://nedapretail.com/loc/store-1
        timestamp:
          type: string
          description: ISO8601 representation of the date/time the items are customized.
          format: date-time
        being_customized:
          type: boolean
          description: When true, items are set to being customized. When false (and being_hemmed is not set to true), the items are returned as part of the stock.
          default: true
        being_hemmed:
          type: boolean
          description: When true, items are set to being hemmed. When false (and being_customized is not set to true), the items are returned as part of the stock.
          default: false
    ReserveRequestV2:
      required:
        - biz_location
        - identifiers
        - identifiers_type
        - timestamp
      type: object
      properties:
        identifiers:
          maxItems: 10000
          minItems: 1
          type: array
          description: The identifiers of the items that are reserved. The list should contain at least one item. Maximum 10k items per request.
          items:
            maxLength: 255
            type: string
        identifiers_type:
          $ref: '#/components/schemas/IdentifiersType'
        biz_location:
          maxLength: 255
          type: string
          description: Location identifier of the store or sublocation.
          example: http://nedapretail.com/loc/store-1
        timestamp:
          type: string
          description: ISO8601 representation of the date/time the items are reserved.
          format: date-time
        reserved:
          type: boolean
          description: When set to false, the items are returned and are part of the stock.
          default: true
        for_peak:
          type: boolean
          description: When set to true (and reserved is set to true), the items are marked as reserved for peak days (like Black Friday).
          default: false
    HoldRequestV2:
      required:
        - biz_location
        - identifiers
        - identifiers_type
        - timestamp
      type: object
      properties:
        identifiers:
          maxItems: 10000
          minItems: 1
          type: array
          description: The identifiers of the items that are held. The list should contain at least one item. Maximum 10k items per request.
          items:
            maxLength: 255
            type: string
        identifiers_type:
          $ref: '#/components/schemas/IdentifiersType'
        biz_location:
          maxLength: 255
          type: string
          description: Location identifier of the store or sublocation.
          example: http://nedapretail.com/loc/store-1
        timestamp:
          type: string
          description: ISO8601 representation of the date/time the items are held.
          format: date-time
        held:
          type: boolean
          description: When true, items are set to held. When false (and received_order is not set to true), the items are returned as part of the stock.
          default: true
        received_order:
          type: boolean
          description: When true, items are set to received order. When false (and held is not set to true), the items are returned as part of the stock.
          default: false
    CommissionRequestV2:
      required:
        - biz_location
        - identifiers
        - identifiers_type
        - timestamp
      type: object
      properties:
        identifiers:
          maxItems: 10000
          minItems: 1
          type: array
          description: The identifiers of the items that are commissioned. The list should contain at least one item. Maximum 10k items per request.
          items:
            maxLength: 255
            type: string
        identifiers_type:
          $ref: '#/components/schemas/IdentifiersType'
        biz_location:
          maxLength: 255
          type: string
          description: Location identifier of the store (or sublocation) where the items are commissioned for.
          example: http://nedapretail.com/loc/store-1
        production_order:
          maxLength: 255
          type: string
          description: Production order number that is associated with the items that are commissioned.
          example: Z009977406
        timestamp:
          type: string
          description: ISO8601 representation of the date/time the items are commissioned.
          format: date-time
    TransactionItem:
      required:
        - identifier
        - quantity
      type: object
      properties:
        identifier:
          pattern: ^\d{14}$
          type: string
          description: GTIN of the item. The identifiers_type field determines how this value is interpreted.
          example: '08716232800012'
        quantity:
          maximum: 100
          minimum: 1
          type: integer
          description: Must be a positive value. Zero or negative values are not allowed.
          format: int32
          example: 2
    IdentifiersType:
      type: string
      description: Determines how the identifiers values should be interpreted.
      enum:
        - epc_uri
        - epc_hex
        - gs1_elementstring
        - gs1_digitallink
    VoidSaleRequest:
      required:
        - biz_location
        - identifiers
        - identifiers_type
        - timestamp
      type: object
      properties:
        identifiers:
          maxItems: 10000
          minItems: 1
          type: array
          description: Identifiers of the items that are part of the voided sale. The identifiers_type field determines how this value is interpreted. Maximum 10k items per request.
          items:
            maxLength: 255
            type: string
        identifiers_type:
          $ref: '#/components/schemas/IdentifiersType'
        disposition:
          maxLength: 255
          type: string
          description: Disposition the specified items should get. Omit or leave empty if the disposition should not change.
          example: urn:epcglobal:cbv:disp:sellable_not_accessible
        biz_location:
          maxLength: 255
          type: string
          description: Location identifier of the store or sublocation.
          example: http://nedapretail.com/loc/store-1
        read_point:
          maxLength: 255
          type: string
          description: Location identifier of readpoint (optional, will be equal to 'biz_location' if omitted).
          example: http://nedapretail.com/loc/store-1
        timestamp:
          type: string
          description: ISO8601 representation of the date/time the transaction took place.
          format: date-time
        void_type:
          type: string
          description: Type of void transaction, determines bizstep. If empty, line is used.
          default: line
          enum:
            - line
            - transaction
        biz_transaction:
          maxLength: 255
          type: string
          description: Optional transaction identifier. Will be added to the EPCIS event with CBV biz transaction type invoice (`urn:epcglobal:cbv:btt:inv`).
          example: '1234'
      description: ''
    VoidSaleNonSerializedRequest:
      required:
        - biz_location
        - identifiers_type
        - items
        - timestamp
      type: object
      properties:
        identifiers_type:
          type: string
          description: Determines how the identifiers values should be interpreted.
          enum:
            - gtin
        disposition:
          maxLength: 255
          type: string
          description: Disposition to register with the transaction. If omitted, defaults to `urn:epcglobal:cbv:disp:sellable_not_accessible`.
          example: urn:epcglobal:cbv:disp:sellable_not_accessible
          default: urn:epcglobal:cbv:disp:sellable_not_accessible
        biz_location:
          maxLength: 255
          type: string
          description: Location identifier of the store or sublocation
          example: http://nedapretail.com/loc/store-1
        read_point:
          maxLength: 255
          type: string
          description: Location identifier of readpoint (will be equal to 'biz_location' if omitted).
          example: http://nedapretail.com/loc/store-1
        timestamp:
          type: string
          description: ISO8601 representation of the date/time the transaction took place.
          format: date-time
        items:
          maxItems: 10000
          minItems: 1
          type: array
          description: List of items in the voided sale. Maximum 10k items per request.
          items:
            $ref: '#/components/schemas/TransactionItem'
        void_type:
          type: string
          description: Type of void transaction, determines bizstep. If empty, line is used.
          default: line
          enum:
            - line
            - transaction
        biz_transaction:
          maxLength: 255
          type: string
          description: Optional transaction identifier. Will be added to the EPCIS event with CBV biz transaction type invoice (`urn:epcglobal:cbv:btt:inv`).
          example: '1234'
    CreateOrReplaceShipment:
      required:
        - destination
        - source
      type: object
      properties:
        id:
          maxLength: 255
          type: string
          description: Complies with the GS1 ParentId URL notation.
          example: http://nedapretail.com/obj/03394db9-29c8-4787-b860-ce954cf4eabc.4561212345
        external_ref:
          maxLength: 255
          type: string
          description: Reference for the shipment as defined by the retailer, like a shipment number.
          example: '4561212345'
        source:
          maxLength: 255
          type: string
          description: Location identifier for the source of the shipment.
          example: http://nedapretail.com/loc/store-1
        destination:
          maxLength: 255
          type: string
          description: Location identifier for the destination of the shipment.
          example: http://nedapretail.com/loc/store-2
        created_time:
          type: string
          description: Time the shipment was created. When omitted it's filled with the current time.
          format: date-time
        shipment_type:
          maxLength: 255
          type: string
          description: The shipment type when applicable.
        ptc:
          maxLength: 255
          type: string
          description: PTC stands for parcel template code.
        box_code:
          maxLength: 10
          type: string
          description: Temporary reference that is used by store employees to quickly link shipment label with physical box.
          example: EDF-KHA
        description:
          maxLength: 1024
          type: string
          description: A description for the shipment.
        sent_sgtins:
          maxItems: 10000
          type: array
          description: The list should contain at least one SGTIN when sent_gtin_quantities are omitted.
          items:
            maxLength: 100
            type: string
            example: urn:epc:id:sgtin:2000012.030078.1001
        sent_gtin_quantities:
          maxItems: 10000
          type: array
          description: The list should contain at least one entry when sent_sgtins are omitted.
          items:
            $ref: '#/components/schemas/GtinQuantity'
        properties:
          maxItems: 500
          type: object
          additionalProperties:
            maxLength: 1024
            type: string
          description: Map with additional properties.
    CreateShipmentNotice:
      allOf:
        - $ref: '#/components/schemas/CreateOrReplaceShipment'
        - type: object
          properties:
            expected_delivery_time:
              type: string
              description: Specifies the expected delivery time for the shipment.
              format: date-time
    CreateOrReplaceShipmentResponse:
      type: object
      properties:
        id:
          type: string
          description: The shipment id.
          example: The key
        external_ref:
          type: string
          description: Reference for the shipment as defined by the retailer, like a shipment number.
          example: The Value
    PTC:
      required:
        - end_date
        - item_type
        - items
        - location
        - name
        - start_date
      type: object
      properties:
        name:
          type: string
          description: The name and identifier for the parcel template code.
          example: E11
        location:
          type: string
          description: The location identifier of the store that can use this PTC
          example: http://nedapretail.com/loc/store-1
        start_date:
          type: string
          description: The date and time at which the PTC is available.
          format: date-time
        end_date:
          type: string
          description: The date and time until the PTC is available.
          format: date-time
        item_type:
          type: string
          description: The type of items to be stored.
          enum:
            - option_code
            - gtin
            - sku_code
        items:
          uniqueItems: true
          type: array
          description: The items which are permitted to be shipped.
          items:
            type: string
    PTCSummary:
      required:
        - end_date
        - location
        - name
        - start_date
      type: object
      properties:
        name:
          type: string
          description: The name and identifier for the parcel template code.
          example: E11
        location:
          type: string
          description: The location identifier of the store that can use this PTC
          example: http://nedapretail.com/loc/store-1
        start_date:
          type: string
          description: The date and time at which the PTC is available.
          format: date-time
        end_date:
          type: string
          description: The date and time until the PTC is available.
          format: date-time
    ReceiveShipmentRequest:
      required:
        - location
        - sgtins
      type: object
      properties:
        id:
          maxLength: 255
          type: string
          description: Shipment id of the shipment to receive when applicable.
          example: http://nedapretail.com/obj/03394db9-29c8-4787-b860-ce954cf4eabc.4561212345
        location:
          maxLength: 255
          type: string
          description: Location identifier for the (sub)location in which the shipment is received.
          example: http://nedapretail.com/loc/stockroom-101
        received_time:
          type: string
          description: Time the shipment was received. When omitted it's filled with the current time.
          format: date-time
        sgtins:
          maxItems: 10000
          type: array
          description: A list of SGTINs which are received. The list should contain at least one SGTIN.
          items:
            maxLength: 100
            type: string
            example: urn:epc:id:sgtin:2000012.030078.1001
    ShipmentAddress:
      type: object
      properties:
        address_line_1:
          type: string
          description: First address line.
        address_line_2:
          type: string
          description: Second address line.
        city:
          type: string
          description: The city.
        region:
          type: string
          description: The region the city is part of.
        postal_code:
          type: string
          description: The postcal code for the address.
        country_code:
          type: string
          description: The 2-character ISO 3166-1 alpha-2 country code.
        latitude:
          type: number
          description: The latitude part of the location.
        longitude:
          type: number
          description: The longitude part of the location.
    ShipmentLocation:
      required:
        - location
      type: object
      properties:
        location:
          type: string
          description: The location identifier.
        store_type:
          type: string
          description: The type of the store, e.g. "fashion".
        name:
          type: string
          description: The name for the location.
        address:
          $ref: '#/components/schemas/ShipmentAddress'
    ShipmentV2:
      required:
        - created_time
        - destination
        - id
        - last_modified_time
        - record_time
        - status
      type: object
      properties:
        id:
          type: string
          description: The shipment id. Complies with the GS1 ParentId URL notation.
          example: http://nedapretail.com/obj/03394db9-29c8-4787-b860-ce954cf4eabc.4561212345
        external_ref:
          type: string
          description: Reference for the shipment as defined by the retailer, like a shipment number.
          example: '4561212345'
        source:
          type: string
          description: Location identifier of the source of the shipment.
          example: http://nedapretail.com/loc/store-1
        destination:
          type: string
          description: Location identifier for the destination of the shipment or the location in which it was received.
          example: http://nedapretail.com/loc/room-101
        original_destination:
          type: string
          description: Location identifier of the original destination according to the shipment notice. It will be present when the shipment is received on a different location then stated on the shipment notice.
          example: http://nedapretail.com/loc/store-3
        received_location:
          type: string
          description: Location identifier of the exact (sub)location where the shipment has been received.
          example: http://nedapretail.com/loc/store-3
        shipment_type:
          type: string
          description: The shipment type.
        ptc:
          type: string
          description: PTC stands for parcel template code.
        box_code:
          type: string
          description: Easy to remember shipment reference that is used by store employees to quickly link shipment label with physical box.
          example: EDF-KHA
        description:
          type: string
          description: A description for the shipment.
        created_time:
          type: string
          description: Time the shipment was created.
          format: date-time
        sent_sgtins:
          type: array
          description: The list contains SGTINs when applicable.
          items:
            type: string
            example: urn:epc:id:sgtin:2000012.030078.1001
        received_sgtins:
          type: array
          description: The list contains the received SGTINs when applicable.
          items:
            type: string
            example: urn:epc:id:sgtin:2000012.030078.1001
        properties:
          type: object
          additionalProperties:
            type: string
          description: Map with additional properties.
        status:
          type: string
          enum:
            - created
            - ready_to_ship
            - in_transit
            - received
        record_time:
          type: string
          description: Will be set to the current time when the shipment is created (with status created).
          format: date-time
        last_modified_time:
          type: string
          description: Time the shipment was last modified.
          format: date-time
        ready_to_ship_time:
          type: string
          description: Will be set to the current time when the status is changed to ready_to_ship.
          format: date-time
        in_transit_time:
          type: string
          description: Will be set to the current time when the status is changed to in_transit.
          format: date-time
        expected_delivery_time:
          type: string
          description: Specifies the expected delivery time for the shipment.
          format: date-time
        received_time:
          type: string
          description: Time the shipment was received.
          format: date-time
        received_accuracy:
          type: number
          description: Accuracy of the received shipment.
          format: float
          example: 98.4
        sent_gtin_quantities:
          type: array
          description: Contains the GTINs and quantities even when the shipment was created with SGTINs.
          items:
            $ref: '#/components/schemas/GtinQuantity'
        received_gtin_quantities:
          type: array
          description: Contains the combined received GTINs and quantities (tagged & non-tagged items).
          items:
            $ref: '#/components/schemas/GtinQuantity'
        non_tagged_received_gtin_quantities:
          type: array
          description: Contains the received GTINs and quantities of the non RFID tagged items.
          items:
            $ref: '#/components/schemas/GtinQuantity'
        sent_quantity:
          type: integer
          description: Total number of sent items.
          format: int32
          example: 123
        received_quantity:
          type: integer
          description: Total number of received items.
          format: int32
          example: 121
        articles:
          type: array
          description: Article details like name, size, etc., corresponding to the GTIN in the GTIN list.
          items:
            $ref: '#/components/schemas/Article'
    ShipmentSummaryV2:
      required:
        - created_time
        - destination
        - id
        - last_modified_time
        - status
      type: object
      properties:
        id:
          type: string
          description: The shipment id. Complies with the GS1 ParentId URL notation.
          example: http://nedapretail.com/obj/03394db9-29c8-4787-b860-ce954cf4eabc.4561212345
        external_ref:
          type: string
          description: Reference for the shipment as defined by the retailer, like a shipment number.
          example: '4561212345'
        source:
          type: string
          description: Location identifier of the source of the shipment.
          example: http://nedapretail.com/loc/store-1
        destination:
          type: string
          description: Location identifier for the destination of the shipment or the location in which it was received.
          example: http://nedapretail.com/loc/room-101
        original_destination:
          type: string
          description: Location identifier of the original destination according to the shipment notice. It will be present when the shipment is received on a different location then stated on the shipment notice.
          example: http://nedapretail.com/loc/store-3
        shipment_type:
          type: string
          description: The shipment type.
        status:
          type: string
          enum:
            - created
            - ready_to_ship
            - in_transit
            - received
        box_code:
          type: string
          description: Temporary reference that is used by store employees to quickly link shipment label with physical box.
          example: EDF-KHA
        created_time:
          type: string
          description: Time the shipment was created.
          format: date-time
        last_modified_time:
          type: string
          description: Time the shipment was last modified.
          format: date-time
        ready_to_ship_time:
          type: string
          description: Time the shipment was set to ready_to_ship.
          format: date-time
        in_transit_time:
          type: string
          description: Time the shipment was set to in_transit.
          format: date-time
        expected_delivery_time:
          type: string
          description: Specifies the expected delivery time for the shipment.
          format: date-time
        received_accuracy:
          type: number
          description: Accuracy of the received shipment.
          format: float
          example: 98.4
        sent_quantity:
          type: integer
          description: Total number of sent items.
          format: int32
          example: 123
        received_quantity:
          type: integer
          description: Total number of received items.
          format: int32
          example: 121
    ShipmentType:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: The human readable name and identifier for the shipment type.
          example: Store-to-DC transfer
        allowed_destination_type:
          type: string
          description: The type of location which is allowed for this kind of shipment when specified.
          enum:
            - store
            - distribution_centre
            - office
            - printshop
            - production_facility
        same_root_division_only:
          type: boolean
          description: Specifies if the destination location should be in the same highest root division as the source.
          default: false
        same_secondary_root_division_only:
          type: boolean
          description: Specifies if the destination location should be in the second highest root division as the source.
          default: false
        same_tertiary_root_division_only:
          type: boolean
          description: Specifies if the destination location should be in the third highest root division as the source.
          default: false
        requires_description:
          type: boolean
          description: Specifies if a description is required when creating a shipment.
          default: false
        requires_ptc:
          type: boolean
          description: Specifies if a PTC should be selected.
          default: false
        requires_external_ref:
          type: boolean
          description: Specifies if an external reference is required when creating a shipment.
          default: false
    ShipShipmentRequest:
      required:
        - id
      type: object
      properties:
        id:
          maxLength: 255
          type: string
          description: Shipment id.
          example: http://nedapretail.com/obj/03394db9-29c8-4787-b860-ce954cf4eabc.4561212345
        expected_delivery_time:
          type: string
          description: Specifies the expected delivery time for the shipment.
          format: date-time
    UpdateShipmentMetadata:
      required:
        - id
      type: object
      properties:
        id:
          maxLength: 255
          type: string
          description: Complies with the GS1 ParentId URL notation.
          example: http://nedapretail.com/obj/03394db9-29c8-4787-b860-ce954cf4eabc.4561212345
        external_ref:
          maxLength: 255
          type: string
          description: Reference for the shipment as defined by the retailer, like a shipment number. If ommitted, the external reference will not be changed.
          example: '4561212345'
        properties:
          type: object
          additionalProperties:
            maxLength: 1024
            type: string
          description: Map with additional properties. Existing properties won't be deleted, only updated when it has the same key. If ommitted, the properties will not be changed.
    ArticleFindResponse:
      type: object
      properties:
        articles:
          type: array
          description: Article details like name, size, etc.
          items:
            $ref: '#/components/schemas/Article'
        extern_ref:
          type: integer
          description: The external reference as specified in the request.
          format: int64
          example: 91828367401
        records_total:
          type: integer
          description: Total number of records, before filtering (i.e. the total number of records in the database).
          format: int64
          example: 849256
        records_filtered:
          type: integer
          description: Total number of records, after filtering (i.e. the total number of records after filtering has been applied - not just the number of records being returned for this page of data).
          format: int64
          example: 2963
    QuantityResponse:
      type: object
      properties:
        quantity:
          type: integer
          description: Number of articles in the database.
          format: int64
          example: 849256
    EpcisQueryRequest:
      type: object
      properties:
        parameters:
          maxItems: 254
          minItems: 0
          type: array
          description: List of query parameters used to query the EPCIS repository.
          items:
            $ref: '#/components/schemas/EpcisQueryCriteria'
        use_cursor:
          type: boolean
          description: If true, the events can be retrieved in multiple requests when there are too many events for a single request, or when the total size of the events are too large for a single request. The default behavior of the EPCIS standard is to report an error. But when using a cursor, the matching EPCIS events can be retrieved in multiple requests.
          default: false
        from_cursor:
          maxLength: 255
          type: string
          description: The cursor value that was provided in the previous response, that will return the next batch of events that match the criteria.
          example: 789c05c1b90d80300c00
    EpcisQueryCriteria:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          description: Name of the query parameter.
          example: MATCH_epc
        value:
          maxLength: 255
          type: string
          description: Value to be queried for within the named parameter.
          example: urn:epc:id:sgln:4012345.00225.0
        values:
          maxItems: 254
          type: array
          description: Values to be queried for within the named parameter.
          items:
            maxLength: 255
            type: string
    EpcisQueryResponse:
      type: object
      properties:
        events:
          type: array
          description: List of EPCIS events that matched the query criteria
          items:
            discriminator:
              propertyName: type
              mapping:
                object_event: '#/components/schemas/ResultObjectEvent'
                aggregation_event: '#/components/schemas/ResultAggregationEvent'
                transaction_event: '#/components/schemas/ResultTransactionEvent'
                transformation_event: '#/components/schemas/ResultTransformationEvent'
            oneOf:
              - $ref: '#/components/schemas/ResultObjectEvent'
              - $ref: '#/components/schemas/ResultAggregationEvent'
              - $ref: '#/components/schemas/ResultTransactionEvent'
              - $ref: '#/components/schemas/ResultTransformationEvent'
        has_more:
          type: boolean
          description: Returns true if the returned set of events is not the complete set of events that match the criteria in the request.
          example: true
        next_cursor:
          type: string
          description: The cursor value that must be provided with the next request to get the next batch of results.
          example: c05d5c533896f1930958
    EpcisQueryLongTermRequest:
      type: object
      properties:
        ge_event_time:
          type: string
          description: If provided, it will only match events that have an event time greater than or equal to the provided date time.
          format: date-time
        lt_event_time:
          type: string
          description: If provided, it will only match events that have an event time less than the provided date time.
          format: date-time
        eq_disposition:
          maxItems: 254
          minItems: 0
          type: array
          description: Optional list of dispositions. If provided, it will only match events that have their disposition equal to one of the provided dispositions.
          items:
            maxLength: 255
            type: string
        eq_biz_step:
          maxItems: 254
          minItems: 0
          type: array
          description: Optional list of business steps. If provided, it will only match events that have their business step equal to one of the provided business steps.
          items:
            maxLength: 255
            type: string
        eq_biz_location:
          maxItems: 254
          minItems: 0
          type: array
          description: Optional list of business locations. If provided, it will only match events that have their business location equal to one of the provided business steps.
          items:
            maxLength: 255
            type: string
        from_cursor:
          maxLength: 255
          type: string
          description: The cursor value that was provided in the previous response, that will return the next batch of events that match the criteria.
          example: 789c05c1b90d80300c00
    ResultEpcisEvent:
      type: object
      properties:
        id:
          type: string
          description: Deprecated EPCIS event identifier, assigned by the creator of the event. This identifier must be unique within the organization. Please use the event_id to identify an event, as this is how the EPCIS standard idenfies events since version 1.2.
          example: 43abaed0-5d11-4b78-83e0-f49caa777b94
        event_id:
          type: string
          description: EPCIS event identifier, assigned by the creator of the event. This identifier must be unique within the organization.
          example: b6f3738d-ec80-4fa6-92e6-b20cfcc99af7
        type:
          type: string
          description: Type of EPCIS event.
          example: object_event
          enum:
            - object_event
            - aggregation_event
            - transaction_event
            - transformation_event
        action:
          type: string
          description: The action field describes the event’s relationship to the lifecycle of the object, aggregation, transaction or transformation.
          example: ADD
          enum:
            - ADD
            - OBSERVE
            - DELETE
        disposition:
          type: string
          description: The business condition of the objects associated with the EPCs, presumed to hold true until contradicted by a subsequent event.
          example: urn:epcglobal:cbv:disp:in_transit
        event_time:
          type: string
          description: The date and time at which the EPCIS Capturing Applications asserts the event occurred.
          format: date-time
        record_time:
          type: string
          description: The date and time at which this event was recorded by an EPCIS Repository.
          format: date-time
        event_time_zone_offset:
          type: string
          description: The time zone offset in effect at the time and place the event occurred, expressed as an offset from UTC.
          example: '+01:00'
        biz_step:
          type: string
          description: The business step of which this event was a part.
          example: urn:epcglobal:cbv:bizstep:shipping
        biz_location:
          type: string
          description: The business location where the objects associated with the containing and contained EPCs may be found, until contradicted by a subsequent event.
          example: urn:epc:id:sgln:0012345.11111.0
        read_point:
          type: string
          description: The read point at which the event took place.
          example: urn:epc:id:sgln:0012345.11111.400
        source_list:
          type: array
          description: An unordered list of Source elements that provide context about the originating endpoint of a business transfer of which this event is a part.
          items:
            $ref: '#/components/schemas/ResultSourceElement'
        destination_list:
          type: array
          description: An unordered list of Destination elements that provide context about the terminating endpoint of a business transfer of which this event is a part.
          items:
            $ref: '#/components/schemas/ResultDestinationElement'
        biz_transaction_list:
          type: array
          description: An unordered list of business transactions that define the context of this event.
          items:
            $ref: '#/components/schemas/ResultBizTransactionElement'
        error_declaration:
          $ref: '#/components/schemas/ResultErrorDeclaration'
    ResultObjectEvent:
      allOf:
        - $ref: '#/components/schemas/ResultEpcisEvent'
        - type: object
          properties:
            ilmd:
              type: string
              description: Instance/Lot master data (Section 7.3.6 of the EPCIS standard, version 1.2) that describes the objects created during this event.
            epc_list:
              type: array
              description: An unordered list of one or more EPCs naming specific objects to which the event pertained.
              items:
                type: string
            quantity_list:
              type: array
              description: An unordered list of one or more QuantityElements identifying (at the class level) objects to which the event pertained.
              items:
                $ref: '#/components/schemas/ResultQuantityElement'
    ResultAggregationEvent:
      allOf:
        - $ref: '#/components/schemas/ResultEpcisEvent'
        - type: object
          properties:
            parent_id:
              type: string
              description: The identifier of the parent of the association.
              example: urn:epc:id:sscc:08410580.999999999
            child_epcs:
              type: array
              description: An unordered list of the EPCs of contained objects identified by instance-level identifiers.
              items:
                type: string
            child_quantity_list:
              type: array
              description: An unordered list of one or more QuantityElements identifying (at the class level) contained objects.
              items:
                $ref: '#/components/schemas/ResultQuantityElement'
    ResultTransactionEvent:
      allOf:
        - $ref: '#/components/schemas/ResultEpcisEvent'
        - type: object
          properties:
            parent_id:
              type: string
              description: The identifier of the parent of the objects given in epcList and quantityList.
              example: urn:epc:id:sscc:08410580.999999999
            epc_list:
              type: array
              description: An unordered list of the EPCs of the objects identified by instance-level identifiers associated with the business transaction.
              items:
                type: string
            quantity_list:
              type: array
              description: An unordered list of one or more QuantityElements identifying objects (at the class level) to which the event pertained.
              items:
                $ref: '#/components/schemas/ResultQuantityElement'
    ResultTransformationEvent:
      allOf:
        - $ref: '#/components/schemas/ResultEpcisEvent'
        - type: object
          properties:
            input_epc_list:
              type: array
              description: An unordered list of one or more EPCs identifying (at the instance level) objects that were inputs to the transformation.
              items:
                type: string
            output_epc_list:
              type: array
              description: An unordered list of one or more EPCs naming (at the instance level) objects that were outputs from the transformation.
              items:
                type: string
            input_quantity_list:
              type: array
              description: An unordered list of one or more QuantityElements identifying (at the class level) objects that were inputs to the transformation.
              items:
                $ref: '#/components/schemas/ResultQuantityElement'
            output_quantity_list:
              type: array
              description: An unordered list of one or more QuantityElements identifying (at the class level) objects that were outputs from the transformation.
              items:
                $ref: '#/components/schemas/ResultQuantityElement'
            transformation_id:
              type: string
              description: A unique identifier that links this event to other TransformationEvents having an identical value of 'transformationID'.
              example: afcb68c9-bba9-4101-8f3f-ded8a1dbdfba
    ResultBizTransactionElement:
      type: object
      properties:
        type:
          type: string
          description: An identifier that indicates what kind of business transaction this BusinessTransaction denotes.
          example: urn:epcglobal:cbv:btt:po
        biz_transaction:
          type: string
          description: An identifier that denotes a specific business transaction.
          example: http://transaction.acme.com/po/12345678
    ResultErrorDeclaration:
      type: object
      properties:
        declaration_time:
          type: string
          description: The date and time at which the declaration of error is made.
          format: date-time
        reason:
          type: string
          description: An element from a standard vocabulary that specifies the reason the prior event is considered erroneous.
          example: urn:epcglobal:cbv:er:incorrect_data
        corrective_event_ids:
          type: array
          description: If present, indicates that the events having the specified URIs as the value of their eventID fields are to be considered as "corrections" to the event declared erroneous by this event.
          items:
            type: string
      description: A ErrorDeclaration is a structure that identifies a prior EPCISEvent is in error.
    ResultQuantityElement:
      required:
        - epc_class
      type: object
      properties:
        quantity:
          minimum: 0
          type: number
          description: A number that specifies how many or how much of the specified EPCClass is denoted by this QuantityElement.
          example: 200
        uom:
          type: string
          description: If present, specifies a unit of measure by which the specified quantity is to be interpreted as a physical measure, specifying how much of the specified EPCClass is denoted by this QuantityElement.
          example: KGM
        epc_class:
          type: string
          description: A class-level identifier for the class to which the specified quantity of objects belongs.
          example: urn:epc:class:lgtin:4012345.012345.998877
      description: A QuantityElement is a structure that identifies objects identified by a specific class-level identifier, either a specific quantity or an unspecified quantity.
    ResultDestinationElement:
      type: object
      properties:
        type:
          type: string
          description: An identifier that indicates what kind of destination this Destination denotes.
          example: urn:epcglobal:cbv:sdt:owning_party
        destination:
          type: string
          description: An identifier that denotes a specific destination.
          example: urn:epc:id:sgln:0614141.00001.0
    ResultSourceElement:
      type: object
      properties:
        type:
          type: string
          description: An identifier that indicates what kind of source this Source denotes.
          example: urn:epcglobal:cbv:sdt:location
        source:
          type: string
          description: An identifier that denotes a specific source.
          example: urn:epc:id:sgln:4012345.00225.0
  securitySchemes:
    bearerAuth:
      type: apiKey
      name: Authorization
      in: header
      x-bearer-format: Bearer
x-explorer-enabled: true
x-proxy-enabled: true
x-samples-enabled: true
x-samples-languages:
  - curl
  - java
  - csharp
  - node
  - ruby
  - python
